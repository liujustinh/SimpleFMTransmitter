
SimpleFMTransmitter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  00001168  000011fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001168  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000002cc  0080014e  0080014e  0000124a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000124a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000188  00000000  00000000  000012bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b53  00000000  00000000  00001444  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d74  00000000  00000000  00003f97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001505  00000000  00000000  00004d0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000498  00000000  00000000  00006210  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c2  00000000  00000000  000066a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000158e  00000000  00000000  0000706a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001e8  00000000  00000000  000085f8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	3e c1       	rjmp	.+636    	; 0x27e <__ctors_end>
       2:	00 00       	nop
       4:	59 c1       	rjmp	.+690    	; 0x2b8 <__bad_interrupt>
       6:	00 00       	nop
       8:	57 c1       	rjmp	.+686    	; 0x2b8 <__bad_interrupt>
       a:	00 00       	nop
       c:	55 c1       	rjmp	.+682    	; 0x2b8 <__bad_interrupt>
       e:	00 00       	nop
      10:	53 c1       	rjmp	.+678    	; 0x2b8 <__bad_interrupt>
      12:	00 00       	nop
      14:	51 c1       	rjmp	.+674    	; 0x2b8 <__bad_interrupt>
      16:	00 00       	nop
      18:	4f c1       	rjmp	.+670    	; 0x2b8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4d c1       	rjmp	.+666    	; 0x2b8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	4b c1       	rjmp	.+662    	; 0x2b8 <__bad_interrupt>
      22:	00 00       	nop
      24:	49 c1       	rjmp	.+658    	; 0x2b8 <__bad_interrupt>
      26:	00 00       	nop
      28:	47 c1       	rjmp	.+654    	; 0x2b8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	45 c1       	rjmp	.+650    	; 0x2b8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	43 c1       	rjmp	.+646    	; 0x2b8 <__bad_interrupt>
      32:	00 00       	nop
      34:	5e c5       	rjmp	.+2748   	; 0xaf2 <__vector_13>
      36:	00 00       	nop
      38:	3f c1       	rjmp	.+638    	; 0x2b8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3d c1       	rjmp	.+634    	; 0x2b8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	3b c1       	rjmp	.+630    	; 0x2b8 <__bad_interrupt>
      42:	00 00       	nop
      44:	39 c1       	rjmp	.+626    	; 0x2b8 <__bad_interrupt>
      46:	00 00       	nop
      48:	37 c1       	rjmp	.+622    	; 0x2b8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e5 c5       	rjmp	.+3018   	; 0xc18 <__vector_19>
      4e:	00 00       	nop
      50:	33 c1       	rjmp	.+614    	; 0x2b8 <__bad_interrupt>
      52:	00 00       	nop
      54:	31 c1       	rjmp	.+610    	; 0x2b8 <__bad_interrupt>
      56:	00 00       	nop
      58:	2f c1       	rjmp	.+606    	; 0x2b8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2d c1       	rjmp	.+602    	; 0x2b8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	2b c1       	rjmp	.+598    	; 0x2b8 <__bad_interrupt>
      62:	00 00       	nop
      64:	29 c1       	rjmp	.+594    	; 0x2b8 <__bad_interrupt>
      66:	00 00       	nop
      68:	27 c1       	rjmp	.+590    	; 0x2b8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	25 c1       	rjmp	.+586    	; 0x2b8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	23 c1       	rjmp	.+582    	; 0x2b8 <__bad_interrupt>
      72:	00 00       	nop
      74:	21 c1       	rjmp	.+578    	; 0x2b8 <__bad_interrupt>
      76:	00 00       	nop
      78:	1f c1       	rjmp	.+574    	; 0x2b8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1d c1       	rjmp	.+570    	; 0x2b8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	1b c1       	rjmp	.+566    	; 0x2b8 <__bad_interrupt>
      82:	00 00       	nop
      84:	19 c1       	rjmp	.+562    	; 0x2b8 <__bad_interrupt>
      86:	00 00       	nop
      88:	17 c1       	rjmp	.+558    	; 0x2b8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	fb 01       	movw	r30, r22
      8e:	21 02       	muls	r18, r17
      90:	47 02       	muls	r20, r23
      92:	6d 02       	muls	r22, r29
      94:	93 02       	muls	r25, r19
      96:	b9 02       	muls	r27, r25
      98:	df 02       	muls	r29, r31
      9a:	05 03       	mulsu	r16, r21
      9c:	fb 01       	movw	r30, r22

0000009e <CHARSET>:
      9e:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      ae:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      be:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      ce:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      de:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      ee:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      fe:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     10e:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     11e:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     12e:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     13e:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     14e:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     15e:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     16e:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     17e:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     18e:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     19e:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1ae:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1be:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1ce:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1de:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1ee:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1fe:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     20e:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     21e:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     22e:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     23e:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     24e:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     25e:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     26e:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000027e <__ctors_end>:
     27e:	11 24       	eor	r1, r1
     280:	1f be       	out	0x3f, r1	; 63
     282:	cf ef       	ldi	r28, 0xFF	; 255
     284:	d0 e4       	ldi	r29, 0x40	; 64
     286:	de bf       	out	0x3e, r29	; 62
     288:	cd bf       	out	0x3d, r28	; 61

0000028a <__do_copy_data>:
     28a:	11 e0       	ldi	r17, 0x01	; 1
     28c:	a0 e0       	ldi	r26, 0x00	; 0
     28e:	b1 e0       	ldi	r27, 0x01	; 1
     290:	e8 e6       	ldi	r30, 0x68	; 104
     292:	f1 e1       	ldi	r31, 0x11	; 17
     294:	00 e0       	ldi	r16, 0x00	; 0
     296:	0b bf       	out	0x3b, r16	; 59
     298:	02 c0       	rjmp	.+4      	; 0x29e <__do_copy_data+0x14>
     29a:	07 90       	elpm	r0, Z+
     29c:	0d 92       	st	X+, r0
     29e:	ae 34       	cpi	r26, 0x4E	; 78
     2a0:	b1 07       	cpc	r27, r17
     2a2:	d9 f7       	brne	.-10     	; 0x29a <__do_copy_data+0x10>

000002a4 <__do_clear_bss>:
     2a4:	24 e0       	ldi	r18, 0x04	; 4
     2a6:	ae e4       	ldi	r26, 0x4E	; 78
     2a8:	b1 e0       	ldi	r27, 0x01	; 1
     2aa:	01 c0       	rjmp	.+2      	; 0x2ae <.do_clear_bss_start>

000002ac <.do_clear_bss_loop>:
     2ac:	1d 92       	st	X+, r1

000002ae <.do_clear_bss_start>:
     2ae:	aa 31       	cpi	r26, 0x1A	; 26
     2b0:	b2 07       	cpc	r27, r18
     2b2:	e1 f7       	brne	.-8      	; 0x2ac <.do_clear_bss_loop>
     2b4:	dd d4       	rcall	.+2490   	; 0xc70 <main>
     2b6:	56 c7       	rjmp	.+3756   	; 0x1164 <_exit>

000002b8 <__bad_interrupt>:
     2b8:	a3 ce       	rjmp	.-698    	; 0x0 <__vectors>

000002ba <SM3_PiInterface>:
	if (buffer)
	{
		sprintf(buffer, "%d", x);
	}
	return buffer; // caller is expected to invoke free() on this buffer to release memory
}
     2ba:	00 97       	sbiw	r24, 0x00	; 0
     2bc:	c1 f0       	breq	.+48     	; 0x2ee <SM3_PiInterface+0x34>
     2be:	1c f4       	brge	.+6      	; 0x2c6 <SM3_PiInterface+0xc>
     2c0:	01 96       	adiw	r24, 0x01	; 1
     2c2:	91 f0       	breq	.+36     	; 0x2e8 <SM3_PiInterface+0x2e>
     2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <SM3_PiInterface+0x16>
     2c6:	81 30       	cpi	r24, 0x01	; 1
     2c8:	91 05       	cpc	r25, r1
     2ca:	29 f0       	breq	.+10     	; 0x2d6 <SM3_PiInterface+0x1c>
     2cc:	02 97       	sbiw	r24, 0x02	; 2
     2ce:	79 f0       	breq	.+30     	; 0x2ee <SM3_PiInterface+0x34>
     2d0:	8f ef       	ldi	r24, 0xFF	; 255
     2d2:	9f ef       	ldi	r25, 0xFF	; 255
     2d4:	08 95       	ret
     2d6:	20 91 73 01 	lds	r18, 0x0173	; 0x800173 <receivedData>
     2da:	22 23       	and	r18, r18
     2dc:	51 f0       	breq	.+20     	; 0x2f2 <SM3_PiInterface+0x38>
     2de:	f7 d5       	rcall	.+3054   	; 0xece <nokia_lcd_clear>
     2e0:	5e 9a       	sbi	0x0b, 6	; 11
     2e2:	82 e0       	ldi	r24, 0x02	; 2
     2e4:	90 e0       	ldi	r25, 0x00	; 0
     2e6:	08 95       	ret
     2e8:	80 e0       	ldi	r24, 0x00	; 0
     2ea:	90 e0       	ldi	r25, 0x00	; 0
     2ec:	08 95       	ret
     2ee:	81 e0       	ldi	r24, 0x01	; 1
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	08 95       	ret

000002f4 <transmit_data>:
     2f4:	81 30       	cpi	r24, 0x01	; 1
     2f6:	91 05       	cpc	r25, r1
     2f8:	09 f5       	brne	.+66     	; 0x33c <transmit_data+0x48>
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	78 e0       	ldi	r23, 0x08	; 8
     300:	e1 e0       	ldi	r30, 0x01	; 1
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	78 b9       	out	0x08, r23	; 8
     306:	88 b1       	in	r24, 0x08	; 8
     308:	af 01       	movw	r20, r30
     30a:	02 2e       	mov	r0, r18
     30c:	02 c0       	rjmp	.+4      	; 0x312 <transmit_data+0x1e>
     30e:	44 0f       	add	r20, r20
     310:	55 1f       	adc	r21, r21
     312:	0a 94       	dec	r0
     314:	e2 f7       	brpl	.-8      	; 0x30e <transmit_data+0x1a>
     316:	46 23       	and	r20, r22
     318:	11 f0       	breq	.+4      	; 0x31e <transmit_data+0x2a>
     31a:	81 60       	ori	r24, 0x01	; 1
     31c:	01 c0       	rjmp	.+2      	; 0x320 <transmit_data+0x2c>
     31e:	8e 7f       	andi	r24, 0xFE	; 254
     320:	98 b1       	in	r25, 0x08	; 8
     322:	89 2b       	or	r24, r25
     324:	88 b9       	out	0x08, r24	; 8
     326:	41 9a       	sbi	0x08, 1	; 8
     328:	2f 5f       	subi	r18, 0xFF	; 255
     32a:	3f 4f       	sbci	r19, 0xFF	; 255
     32c:	28 30       	cpi	r18, 0x08	; 8
     32e:	31 05       	cpc	r19, r1
     330:	49 f7       	brne	.-46     	; 0x304 <transmit_data+0x10>
     332:	42 9a       	sbi	0x08, 2	; 8
     334:	88 b1       	in	r24, 0x08	; 8
     336:	80 7f       	andi	r24, 0xF0	; 240
     338:	88 b9       	out	0x08, r24	; 8
     33a:	08 95       	ret
     33c:	83 30       	cpi	r24, 0x03	; 3
     33e:	91 05       	cpc	r25, r1
     340:	01 f5       	brne	.+64     	; 0x382 <transmit_data+0x8e>
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	50 e8       	ldi	r21, 0x80	; 128
     348:	e1 e0       	ldi	r30, 0x01	; 1
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	58 b9       	out	0x08, r21	; 8
     34e:	48 b1       	in	r20, 0x08	; 8
     350:	9f 01       	movw	r18, r30
     352:	08 2e       	mov	r0, r24
     354:	02 c0       	rjmp	.+4      	; 0x35a <transmit_data+0x66>
     356:	22 0f       	add	r18, r18
     358:	33 1f       	adc	r19, r19
     35a:	0a 94       	dec	r0
     35c:	e2 f7       	brpl	.-8      	; 0x356 <transmit_data+0x62>
     35e:	26 23       	and	r18, r22
     360:	19 f0       	breq	.+6      	; 0x368 <transmit_data+0x74>
     362:	24 2f       	mov	r18, r20
     364:	20 61       	ori	r18, 0x10	; 16
     366:	02 c0       	rjmp	.+4      	; 0x36c <transmit_data+0x78>
     368:	24 2f       	mov	r18, r20
     36a:	2f 7e       	andi	r18, 0xEF	; 239
     36c:	28 b9       	out	0x08, r18	; 8
     36e:	45 9a       	sbi	0x08, 5	; 8
     370:	01 96       	adiw	r24, 0x01	; 1
     372:	88 30       	cpi	r24, 0x08	; 8
     374:	91 05       	cpc	r25, r1
     376:	51 f7       	brne	.-44     	; 0x34c <transmit_data+0x58>
     378:	46 9a       	sbi	0x08, 6	; 8
     37a:	88 b1       	in	r24, 0x08	; 8
     37c:	8f 70       	andi	r24, 0x0F	; 15
     37e:	88 b9       	out	0x08, r24	; 8
     380:	08 95       	ret
     382:	02 97       	sbiw	r24, 0x02	; 2
     384:	f9 f4       	brne	.+62     	; 0x3c4 <transmit_data+0xd0>
     386:	80 e0       	ldi	r24, 0x00	; 0
     388:	90 e0       	ldi	r25, 0x00	; 0
     38a:	50 e8       	ldi	r21, 0x80	; 128
     38c:	e1 e0       	ldi	r30, 0x01	; 1
     38e:	f0 e0       	ldi	r31, 0x00	; 0
     390:	52 b9       	out	0x02, r21	; 2
     392:	42 b1       	in	r20, 0x02	; 2
     394:	9f 01       	movw	r18, r30
     396:	08 2e       	mov	r0, r24
     398:	02 c0       	rjmp	.+4      	; 0x39e <transmit_data+0xaa>
     39a:	22 0f       	add	r18, r18
     39c:	33 1f       	adc	r19, r19
     39e:	0a 94       	dec	r0
     3a0:	e2 f7       	brpl	.-8      	; 0x39a <transmit_data+0xa6>
     3a2:	26 23       	and	r18, r22
     3a4:	19 f0       	breq	.+6      	; 0x3ac <transmit_data+0xb8>
     3a6:	24 2f       	mov	r18, r20
     3a8:	20 61       	ori	r18, 0x10	; 16
     3aa:	02 c0       	rjmp	.+4      	; 0x3b0 <transmit_data+0xbc>
     3ac:	24 2f       	mov	r18, r20
     3ae:	2f 7e       	andi	r18, 0xEF	; 239
     3b0:	22 b9       	out	0x02, r18	; 2
     3b2:	15 9a       	sbi	0x02, 5	; 2
     3b4:	01 96       	adiw	r24, 0x01	; 1
     3b6:	88 30       	cpi	r24, 0x08	; 8
     3b8:	91 05       	cpc	r25, r1
     3ba:	51 f7       	brne	.-44     	; 0x390 <transmit_data+0x9c>
     3bc:	16 9a       	sbi	0x02, 6	; 2
     3be:	82 b1       	in	r24, 0x02	; 2
     3c0:	8f 70       	andi	r24, 0x0F	; 15
     3c2:	82 b9       	out	0x02, r24	; 2
     3c4:	08 95       	ret

000003c6 <pulseLED>:
     3c6:	60 e0       	ldi	r22, 0x00	; 0
     3c8:	83 e0       	ldi	r24, 0x03	; 3
     3ca:	90 e0       	ldi	r25, 0x00	; 0
     3cc:	93 df       	rcall	.-218    	; 0x2f4 <transmit_data>
     3ce:	6f ef       	ldi	r22, 0xFF	; 255
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	8f df       	rcall	.-226    	; 0x2f4 <transmit_data>
     3d6:	6f ef       	ldi	r22, 0xFF	; 255
     3d8:	82 e0       	ldi	r24, 0x02	; 2
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	8b cf       	rjmp	.-234    	; 0x2f4 <transmit_data>
     3de:	08 95       	ret

000003e0 <SM2_MatrixDisplay>:
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	01 96       	adiw	r24, 0x01	; 1
     3e6:	89 30       	cpi	r24, 0x09	; 9
     3e8:	91 05       	cpc	r25, r1
     3ea:	08 f0       	brcs	.+2      	; 0x3ee <SM2_MatrixDisplay+0xe>
     3ec:	34 c1       	rjmp	.+616    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
     3ee:	8a 5b       	subi	r24, 0xBA	; 186
     3f0:	9f 4f       	sbci	r25, 0xFF	; 255
     3f2:	fc 01       	movw	r30, r24
     3f4:	ae c6       	rjmp	.+3420   	; 0x1152 <__tablejump2__>
     3f6:	c0 e0       	ldi	r28, 0x00	; 0
     3f8:	d1 e0       	ldi	r29, 0x01	; 1
     3fa:	e8 81       	ld	r30, Y
     3fc:	f9 81       	ldd	r31, Y+1	; 0x01
     3fe:	62 81       	ldd	r22, Z+2	; 0x02
     400:	83 e0       	ldi	r24, 0x03	; 3
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	77 df       	rcall	.-274    	; 0x2f4 <transmit_data>
     406:	e8 81       	ld	r30, Y
     408:	f9 81       	ldd	r31, Y+1	; 0x01
     40a:	61 81       	ldd	r22, Z+1	; 0x01
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	71 df       	rcall	.-286    	; 0x2f4 <transmit_data>
     412:	6f ef       	ldi	r22, 0xFF	; 255
     414:	82 e0       	ldi	r24, 0x02	; 2
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	6d df       	rcall	.-294    	; 0x2f4 <transmit_data>
     41a:	e8 81       	ld	r30, Y
     41c:	f9 81       	ldd	r31, Y+1	; 0x01
     41e:	62 81       	ldd	r22, Z+2	; 0x02
     420:	83 e0       	ldi	r24, 0x03	; 3
     422:	90 e0       	ldi	r25, 0x00	; 0
     424:	67 df       	rcall	.-306    	; 0x2f4 <transmit_data>
     426:	e8 81       	ld	r30, Y
     428:	f9 81       	ldd	r31, Y+1	; 0x01
     42a:	60 81       	ld	r22, Z
     42c:	82 e0       	ldi	r24, 0x02	; 2
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	61 df       	rcall	.-318    	; 0x2f4 <transmit_data>
     432:	6f ef       	ldi	r22, 0xFF	; 255
     434:	81 e0       	ldi	r24, 0x01	; 1
     436:	90 e0       	ldi	r25, 0x00	; 0
     438:	5d df       	rcall	.-326    	; 0x2f4 <transmit_data>
     43a:	c5 df       	rcall	.-118    	; 0x3c6 <pulseLED>
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	0c c1       	rjmp	.+536    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     442:	c0 e0       	ldi	r28, 0x00	; 0
     444:	d1 e0       	ldi	r29, 0x01	; 1
     446:	ea 81       	ldd	r30, Y+2	; 0x02
     448:	fb 81       	ldd	r31, Y+3	; 0x03
     44a:	62 81       	ldd	r22, Z+2	; 0x02
     44c:	83 e0       	ldi	r24, 0x03	; 3
     44e:	90 e0       	ldi	r25, 0x00	; 0
     450:	51 df       	rcall	.-350    	; 0x2f4 <transmit_data>
     452:	ea 81       	ldd	r30, Y+2	; 0x02
     454:	fb 81       	ldd	r31, Y+3	; 0x03
     456:	61 81       	ldd	r22, Z+1	; 0x01
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	4b df       	rcall	.-362    	; 0x2f4 <transmit_data>
     45e:	6f ef       	ldi	r22, 0xFF	; 255
     460:	82 e0       	ldi	r24, 0x02	; 2
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	47 df       	rcall	.-370    	; 0x2f4 <transmit_data>
     466:	ea 81       	ldd	r30, Y+2	; 0x02
     468:	fb 81       	ldd	r31, Y+3	; 0x03
     46a:	62 81       	ldd	r22, Z+2	; 0x02
     46c:	83 e0       	ldi	r24, 0x03	; 3
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	41 df       	rcall	.-382    	; 0x2f4 <transmit_data>
     472:	ea 81       	ldd	r30, Y+2	; 0x02
     474:	fb 81       	ldd	r31, Y+3	; 0x03
     476:	60 81       	ld	r22, Z
     478:	82 e0       	ldi	r24, 0x02	; 2
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	3b df       	rcall	.-394    	; 0x2f4 <transmit_data>
     47e:	6f ef       	ldi	r22, 0xFF	; 255
     480:	81 e0       	ldi	r24, 0x01	; 1
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	37 df       	rcall	.-402    	; 0x2f4 <transmit_data>
     486:	9f df       	rcall	.-194    	; 0x3c6 <pulseLED>
     488:	81 e0       	ldi	r24, 0x01	; 1
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	e6 c0       	rjmp	.+460    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     48e:	c0 e0       	ldi	r28, 0x00	; 0
     490:	d1 e0       	ldi	r29, 0x01	; 1
     492:	ec 81       	ldd	r30, Y+4	; 0x04
     494:	fd 81       	ldd	r31, Y+5	; 0x05
     496:	62 81       	ldd	r22, Z+2	; 0x02
     498:	83 e0       	ldi	r24, 0x03	; 3
     49a:	90 e0       	ldi	r25, 0x00	; 0
     49c:	2b df       	rcall	.-426    	; 0x2f4 <transmit_data>
     49e:	ec 81       	ldd	r30, Y+4	; 0x04
     4a0:	fd 81       	ldd	r31, Y+5	; 0x05
     4a2:	61 81       	ldd	r22, Z+1	; 0x01
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	25 df       	rcall	.-438    	; 0x2f4 <transmit_data>
     4aa:	6f ef       	ldi	r22, 0xFF	; 255
     4ac:	82 e0       	ldi	r24, 0x02	; 2
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	21 df       	rcall	.-446    	; 0x2f4 <transmit_data>
     4b2:	ec 81       	ldd	r30, Y+4	; 0x04
     4b4:	fd 81       	ldd	r31, Y+5	; 0x05
     4b6:	62 81       	ldd	r22, Z+2	; 0x02
     4b8:	83 e0       	ldi	r24, 0x03	; 3
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	1b df       	rcall	.-458    	; 0x2f4 <transmit_data>
     4be:	ec 81       	ldd	r30, Y+4	; 0x04
     4c0:	fd 81       	ldd	r31, Y+5	; 0x05
     4c2:	60 81       	ld	r22, Z
     4c4:	82 e0       	ldi	r24, 0x02	; 2
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	15 df       	rcall	.-470    	; 0x2f4 <transmit_data>
     4ca:	6f ef       	ldi	r22, 0xFF	; 255
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	11 df       	rcall	.-478    	; 0x2f4 <transmit_data>
     4d2:	79 df       	rcall	.-270    	; 0x3c6 <pulseLED>
     4d4:	82 e0       	ldi	r24, 0x02	; 2
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	c0 c0       	rjmp	.+384    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     4da:	c0 e0       	ldi	r28, 0x00	; 0
     4dc:	d1 e0       	ldi	r29, 0x01	; 1
     4de:	ee 81       	ldd	r30, Y+6	; 0x06
     4e0:	ff 81       	ldd	r31, Y+7	; 0x07
     4e2:	62 81       	ldd	r22, Z+2	; 0x02
     4e4:	83 e0       	ldi	r24, 0x03	; 3
     4e6:	90 e0       	ldi	r25, 0x00	; 0
     4e8:	05 df       	rcall	.-502    	; 0x2f4 <transmit_data>
     4ea:	ee 81       	ldd	r30, Y+6	; 0x06
     4ec:	ff 81       	ldd	r31, Y+7	; 0x07
     4ee:	61 81       	ldd	r22, Z+1	; 0x01
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	ff de       	rcall	.-514    	; 0x2f4 <transmit_data>
     4f6:	6f ef       	ldi	r22, 0xFF	; 255
     4f8:	82 e0       	ldi	r24, 0x02	; 2
     4fa:	90 e0       	ldi	r25, 0x00	; 0
     4fc:	fb de       	rcall	.-522    	; 0x2f4 <transmit_data>
     4fe:	ee 81       	ldd	r30, Y+6	; 0x06
     500:	ff 81       	ldd	r31, Y+7	; 0x07
     502:	62 81       	ldd	r22, Z+2	; 0x02
     504:	83 e0       	ldi	r24, 0x03	; 3
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	f5 de       	rcall	.-534    	; 0x2f4 <transmit_data>
     50a:	ee 81       	ldd	r30, Y+6	; 0x06
     50c:	ff 81       	ldd	r31, Y+7	; 0x07
     50e:	60 81       	ld	r22, Z
     510:	82 e0       	ldi	r24, 0x02	; 2
     512:	90 e0       	ldi	r25, 0x00	; 0
     514:	ef de       	rcall	.-546    	; 0x2f4 <transmit_data>
     516:	6f ef       	ldi	r22, 0xFF	; 255
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	eb de       	rcall	.-554    	; 0x2f4 <transmit_data>
     51e:	53 df       	rcall	.-346    	; 0x3c6 <pulseLED>
     520:	83 e0       	ldi	r24, 0x03	; 3
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	9a c0       	rjmp	.+308    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     526:	c0 e0       	ldi	r28, 0x00	; 0
     528:	d1 e0       	ldi	r29, 0x01	; 1
     52a:	e8 85       	ldd	r30, Y+8	; 0x08
     52c:	f9 85       	ldd	r31, Y+9	; 0x09
     52e:	62 81       	ldd	r22, Z+2	; 0x02
     530:	83 e0       	ldi	r24, 0x03	; 3
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	df de       	rcall	.-578    	; 0x2f4 <transmit_data>
     536:	e8 85       	ldd	r30, Y+8	; 0x08
     538:	f9 85       	ldd	r31, Y+9	; 0x09
     53a:	61 81       	ldd	r22, Z+1	; 0x01
     53c:	81 e0       	ldi	r24, 0x01	; 1
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	d9 de       	rcall	.-590    	; 0x2f4 <transmit_data>
     542:	6f ef       	ldi	r22, 0xFF	; 255
     544:	82 e0       	ldi	r24, 0x02	; 2
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	d5 de       	rcall	.-598    	; 0x2f4 <transmit_data>
     54a:	e8 85       	ldd	r30, Y+8	; 0x08
     54c:	f9 85       	ldd	r31, Y+9	; 0x09
     54e:	62 81       	ldd	r22, Z+2	; 0x02
     550:	83 e0       	ldi	r24, 0x03	; 3
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	cf de       	rcall	.-610    	; 0x2f4 <transmit_data>
     556:	e8 85       	ldd	r30, Y+8	; 0x08
     558:	f9 85       	ldd	r31, Y+9	; 0x09
     55a:	60 81       	ld	r22, Z
     55c:	82 e0       	ldi	r24, 0x02	; 2
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	c9 de       	rcall	.-622    	; 0x2f4 <transmit_data>
     562:	6f ef       	ldi	r22, 0xFF	; 255
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	c5 de       	rcall	.-630    	; 0x2f4 <transmit_data>
     56a:	2d df       	rcall	.-422    	; 0x3c6 <pulseLED>
     56c:	84 e0       	ldi	r24, 0x04	; 4
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	74 c0       	rjmp	.+232    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     572:	c0 e0       	ldi	r28, 0x00	; 0
     574:	d1 e0       	ldi	r29, 0x01	; 1
     576:	ea 85       	ldd	r30, Y+10	; 0x0a
     578:	fb 85       	ldd	r31, Y+11	; 0x0b
     57a:	62 81       	ldd	r22, Z+2	; 0x02
     57c:	83 e0       	ldi	r24, 0x03	; 3
     57e:	90 e0       	ldi	r25, 0x00	; 0
     580:	b9 de       	rcall	.-654    	; 0x2f4 <transmit_data>
     582:	ea 85       	ldd	r30, Y+10	; 0x0a
     584:	fb 85       	ldd	r31, Y+11	; 0x0b
     586:	61 81       	ldd	r22, Z+1	; 0x01
     588:	81 e0       	ldi	r24, 0x01	; 1
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	b3 de       	rcall	.-666    	; 0x2f4 <transmit_data>
     58e:	6f ef       	ldi	r22, 0xFF	; 255
     590:	82 e0       	ldi	r24, 0x02	; 2
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	af de       	rcall	.-674    	; 0x2f4 <transmit_data>
     596:	ea 85       	ldd	r30, Y+10	; 0x0a
     598:	fb 85       	ldd	r31, Y+11	; 0x0b
     59a:	62 81       	ldd	r22, Z+2	; 0x02
     59c:	83 e0       	ldi	r24, 0x03	; 3
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	a9 de       	rcall	.-686    	; 0x2f4 <transmit_data>
     5a2:	ea 85       	ldd	r30, Y+10	; 0x0a
     5a4:	fb 85       	ldd	r31, Y+11	; 0x0b
     5a6:	60 81       	ld	r22, Z
     5a8:	82 e0       	ldi	r24, 0x02	; 2
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	a3 de       	rcall	.-698    	; 0x2f4 <transmit_data>
     5ae:	6f ef       	ldi	r22, 0xFF	; 255
     5b0:	81 e0       	ldi	r24, 0x01	; 1
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	9f de       	rcall	.-706    	; 0x2f4 <transmit_data>
     5b6:	07 df       	rcall	.-498    	; 0x3c6 <pulseLED>
     5b8:	85 e0       	ldi	r24, 0x05	; 5
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	4e c0       	rjmp	.+156    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     5be:	c0 e0       	ldi	r28, 0x00	; 0
     5c0:	d1 e0       	ldi	r29, 0x01	; 1
     5c2:	ec 85       	ldd	r30, Y+12	; 0x0c
     5c4:	fd 85       	ldd	r31, Y+13	; 0x0d
     5c6:	62 81       	ldd	r22, Z+2	; 0x02
     5c8:	83 e0       	ldi	r24, 0x03	; 3
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	93 de       	rcall	.-730    	; 0x2f4 <transmit_data>
     5ce:	ec 85       	ldd	r30, Y+12	; 0x0c
     5d0:	fd 85       	ldd	r31, Y+13	; 0x0d
     5d2:	61 81       	ldd	r22, Z+1	; 0x01
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	8d de       	rcall	.-742    	; 0x2f4 <transmit_data>
     5da:	6f ef       	ldi	r22, 0xFF	; 255
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	89 de       	rcall	.-750    	; 0x2f4 <transmit_data>
     5e2:	ec 85       	ldd	r30, Y+12	; 0x0c
     5e4:	fd 85       	ldd	r31, Y+13	; 0x0d
     5e6:	62 81       	ldd	r22, Z+2	; 0x02
     5e8:	83 e0       	ldi	r24, 0x03	; 3
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	83 de       	rcall	.-762    	; 0x2f4 <transmit_data>
     5ee:	ec 85       	ldd	r30, Y+12	; 0x0c
     5f0:	fd 85       	ldd	r31, Y+13	; 0x0d
     5f2:	60 81       	ld	r22, Z
     5f4:	82 e0       	ldi	r24, 0x02	; 2
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	7d de       	rcall	.-774    	; 0x2f4 <transmit_data>
     5fa:	6f ef       	ldi	r22, 0xFF	; 255
     5fc:	81 e0       	ldi	r24, 0x01	; 1
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	79 de       	rcall	.-782    	; 0x2f4 <transmit_data>
     602:	e1 de       	rcall	.-574    	; 0x3c6 <pulseLED>
     604:	86 e0       	ldi	r24, 0x06	; 6
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	28 c0       	rjmp	.+80     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     60a:	c0 e0       	ldi	r28, 0x00	; 0
     60c:	d1 e0       	ldi	r29, 0x01	; 1
     60e:	ee 85       	ldd	r30, Y+14	; 0x0e
     610:	ff 85       	ldd	r31, Y+15	; 0x0f
     612:	62 81       	ldd	r22, Z+2	; 0x02
     614:	83 e0       	ldi	r24, 0x03	; 3
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	6d de       	rcall	.-806    	; 0x2f4 <transmit_data>
     61a:	ee 85       	ldd	r30, Y+14	; 0x0e
     61c:	ff 85       	ldd	r31, Y+15	; 0x0f
     61e:	61 81       	ldd	r22, Z+1	; 0x01
     620:	81 e0       	ldi	r24, 0x01	; 1
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	67 de       	rcall	.-818    	; 0x2f4 <transmit_data>
     626:	6f ef       	ldi	r22, 0xFF	; 255
     628:	82 e0       	ldi	r24, 0x02	; 2
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	63 de       	rcall	.-826    	; 0x2f4 <transmit_data>
     62e:	ee 85       	ldd	r30, Y+14	; 0x0e
     630:	ff 85       	ldd	r31, Y+15	; 0x0f
     632:	62 81       	ldd	r22, Z+2	; 0x02
     634:	83 e0       	ldi	r24, 0x03	; 3
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	5d de       	rcall	.-838    	; 0x2f4 <transmit_data>
     63a:	ee 85       	ldd	r30, Y+14	; 0x0e
     63c:	ff 85       	ldd	r31, Y+15	; 0x0f
     63e:	60 81       	ld	r22, Z
     640:	82 e0       	ldi	r24, 0x02	; 2
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	57 de       	rcall	.-850    	; 0x2f4 <transmit_data>
     646:	6f ef       	ldi	r22, 0xFF	; 255
     648:	81 e0       	ldi	r24, 0x01	; 1
     64a:	90 e0       	ldi	r25, 0x00	; 0
     64c:	53 de       	rcall	.-858    	; 0x2f4 <transmit_data>
     64e:	bb de       	rcall	.-650    	; 0x3c6 <pulseLED>
     650:	87 e0       	ldi	r24, 0x07	; 7
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	02 c0       	rjmp	.+4      	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
     656:	8f ef       	ldi	r24, 0xFF	; 255
     658:	9f ef       	ldi	r25, 0xFF	; 255
     65a:	df 91       	pop	r29
     65c:	cf 91       	pop	r28
     65e:	08 95       	ret

00000660 <ADC_init>:
     660:	ea e7       	ldi	r30, 0x7A	; 122
     662:	f0 e0       	ldi	r31, 0x00	; 0
     664:	80 81       	ld	r24, Z
     666:	80 6e       	ori	r24, 0xE0	; 224
     668:	80 83       	st	Z, r24
     66a:	ec e7       	ldi	r30, 0x7C	; 124
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	80 81       	ld	r24, Z
     670:	80 64       	ori	r24, 0x40	; 64
     672:	80 83       	st	Z, r24
     674:	08 95       	ret

00000676 <readADC>:
     676:	ec e7       	ldi	r30, 0x7C	; 124
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	90 81       	ld	r25, Z
     67c:	98 7f       	andi	r25, 0xF8	; 248
     67e:	83 70       	andi	r24, 0x03	; 3
     680:	89 2b       	or	r24, r25
     682:	80 83       	st	Z, r24
     684:	8f e0       	ldi	r24, 0x0F	; 15
     686:	90 e0       	ldi	r25, 0x00	; 0
     688:	00 00       	nop
     68a:	01 97       	sbiw	r24, 0x01	; 1
     68c:	e9 f7       	brne	.-6      	; 0x688 <readADC+0x12>
     68e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     692:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     696:	08 95       	ret

00000698 <joys_tick>:
     698:	cf 93       	push	r28
     69a:	df 93       	push	r29
     69c:	81 e0       	ldi	r24, 0x01	; 1
     69e:	eb df       	rcall	.-42     	; 0x676 <readADC>
     6a0:	ec 01       	movw	r28, r24
     6a2:	80 e0       	ldi	r24, 0x00	; 0
     6a4:	e8 df       	rcall	.-48     	; 0x676 <readADC>
     6a6:	ce 35       	cpi	r28, 0x5E	; 94
     6a8:	21 e0       	ldi	r18, 0x01	; 1
     6aa:	d2 07       	cpc	r29, r18
     6ac:	98 f4       	brcc	.+38     	; 0x6d4 <joys_tick+0x3c>
     6ae:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <down+0x1>
     6b2:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <down>
     6b6:	81 e0       	ldi	r24, 0x01	; 1
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	90 93 fc 03 	sts	0x03FC, r25	; 0x8003fc <right+0x1>
     6be:	80 93 fb 03 	sts	0x03FB, r24	; 0x8003fb <right>
     6c2:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <left+0x1>
     6c6:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <left>
     6ca:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <up+0x1>
     6ce:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <up>
     6d2:	44 c0       	rjmp	.+136    	; 0x75c <joys_tick+0xc4>
     6d4:	cb 38       	cpi	r28, 0x8B	; 139
     6d6:	d2 40       	sbci	r29, 0x02	; 2
     6d8:	98 f0       	brcs	.+38     	; 0x700 <joys_tick+0x68>
     6da:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <right+0x1>
     6de:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <right>
     6e2:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <down+0x1>
     6e6:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <down>
     6ea:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <up+0x1>
     6ee:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <up>
     6f2:	81 e0       	ldi	r24, 0x01	; 1
     6f4:	90 e0       	ldi	r25, 0x00	; 0
     6f6:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <left+0x1>
     6fa:	80 93 fd 03 	sts	0x03FD, r24	; 0x8003fd <left>
     6fe:	2e c0       	rjmp	.+92     	; 0x75c <joys_tick+0xc4>
     700:	28 2f       	mov	r18, r24
     702:	39 2f       	mov	r19, r25
     704:	29 35       	cpi	r18, 0x59	; 89
     706:	82 e0       	ldi	r24, 0x02	; 2
     708:	38 07       	cpc	r19, r24
     70a:	98 f0       	brcs	.+38     	; 0x732 <joys_tick+0x9a>
     70c:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <left+0x1>
     710:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <left>
     714:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <right+0x1>
     718:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <right>
     71c:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <down+0x1>
     720:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <down>
     724:	81 e0       	ldi	r24, 0x01	; 1
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	90 93 f5 03 	sts	0x03F5, r25	; 0x8003f5 <up+0x1>
     72c:	80 93 f4 03 	sts	0x03F4, r24	; 0x8003f4 <up>
     730:	15 c0       	rjmp	.+42     	; 0x75c <joys_tick+0xc4>
     732:	2a 3f       	cpi	r18, 0xFA	; 250
     734:	31 05       	cpc	r19, r1
     736:	90 f4       	brcc	.+36     	; 0x75c <joys_tick+0xc4>
     738:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <up+0x1>
     73c:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <up>
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	90 93 08 04 	sts	0x0408, r25	; 0x800408 <down+0x1>
     748:	80 93 07 04 	sts	0x0407, r24	; 0x800407 <down>
     74c:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <left+0x1>
     750:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <left>
     754:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <right+0x1>
     758:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <right>
     75c:	df 91       	pop	r29
     75e:	cf 91       	pop	r28
     760:	08 95       	ret

00000762 <resetJoystick>:
     762:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <left+0x1>
     766:	10 92 fd 03 	sts	0x03FD, r1	; 0x8003fd <left>
     76a:	10 92 fc 03 	sts	0x03FC, r1	; 0x8003fc <right+0x1>
     76e:	10 92 fb 03 	sts	0x03FB, r1	; 0x8003fb <right>
     772:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <up+0x1>
     776:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <up>
     77a:	10 92 08 04 	sts	0x0408, r1	; 0x800408 <down+0x1>
     77e:	10 92 07 04 	sts	0x0407, r1	; 0x800407 <down>
     782:	08 95       	ret

00000784 <SM1_Menu>:
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	ec 01       	movw	r28, r24
     78a:	81 30       	cpi	r24, 0x01	; 1
     78c:	91 05       	cpc	r25, r1
     78e:	91 f0       	breq	.+36     	; 0x7b4 <SM1_Menu+0x30>
     790:	4c f4       	brge	.+18     	; 0x7a4 <SM1_Menu+0x20>
     792:	cf 3f       	cpi	r28, 0xFF	; 255
     794:	8f ef       	ldi	r24, 0xFF	; 255
     796:	d8 07       	cpc	r29, r24
     798:	09 f4       	brne	.+2      	; 0x79c <SM1_Menu+0x18>
     79a:	45 c1       	rjmp	.+650    	; 0xa26 <SM1_Menu+0x2a2>
     79c:	cd 2b       	or	r28, r29
     79e:	09 f4       	brne	.+2      	; 0x7a2 <SM1_Menu+0x1e>
     7a0:	6c c1       	rjmp	.+728    	; 0xa7a <SM1_Menu+0x2f6>
     7a2:	64 c1       	rjmp	.+712    	; 0xa6c <SM1_Menu+0x2e8>
     7a4:	82 30       	cpi	r24, 0x02	; 2
     7a6:	91 05       	cpc	r25, r1
     7a8:	09 f4       	brne	.+2      	; 0x7ac <SM1_Menu+0x28>
     7aa:	92 c0       	rjmp	.+292    	; 0x8d0 <SM1_Menu+0x14c>
     7ac:	03 97       	sbiw	r24, 0x03	; 3
     7ae:	09 f4       	brne	.+2      	; 0x7b2 <SM1_Menu+0x2e>
     7b0:	14 c1       	rjmp	.+552    	; 0x9da <SM1_Menu+0x256>
     7b2:	5c c1       	rjmp	.+696    	; 0xa6c <SM1_Menu+0x2e8>
     7b4:	80 91 07 04 	lds	r24, 0x0407	; 0x800407 <down>
     7b8:	90 91 08 04 	lds	r25, 0x0408	; 0x800408 <down+0x1>
     7bc:	01 97       	sbiw	r24, 0x01	; 1
     7be:	61 f5       	brne	.+88     	; 0x818 <SM1_Menu+0x94>
     7c0:	86 d3       	rcall	.+1804   	; 0xece <nokia_lcd_clear>
     7c2:	60 e0       	ldi	r22, 0x00	; 0
     7c4:	80 e0       	ldi	r24, 0x00	; 0
     7c6:	7b d4       	rcall	.+2294   	; 0x10be <nokia_lcd_set_cursor>
     7c8:	61 e0       	ldi	r22, 0x01	; 1
     7ca:	8a e1       	ldi	r24, 0x1A	; 26
     7cc:	91 e0       	ldi	r25, 0x01	; 1
     7ce:	65 d4       	rcall	.+2250   	; 0x109a <nokia_lcd_write_string>
     7d0:	69 e1       	ldi	r22, 0x19	; 25
     7d2:	85 e0       	ldi	r24, 0x05	; 5
     7d4:	74 d4       	rcall	.+2280   	; 0x10be <nokia_lcd_set_cursor>
     7d6:	61 e0       	ldi	r22, 0x01	; 1
     7d8:	89 e2       	ldi	r24, 0x29	; 41
     7da:	91 e0       	ldi	r25, 0x01	; 1
     7dc:	5e d4       	rcall	.+2236   	; 0x109a <nokia_lcd_write_string>
     7de:	63 e2       	ldi	r22, 0x23	; 35
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	6d d4       	rcall	.+2266   	; 0x10be <nokia_lcd_set_cursor>
     7e4:	61 e0       	ldi	r22, 0x01	; 1
     7e6:	86 e3       	ldi	r24, 0x36	; 54
     7e8:	91 e0       	ldi	r25, 0x01	; 1
     7ea:	57 d4       	rcall	.+2222   	; 0x109a <nokia_lcd_write_string>
     7ec:	63 e2       	ldi	r22, 0x23	; 35
     7ee:	85 e0       	ldi	r24, 0x05	; 5
     7f0:	66 d4       	rcall	.+2252   	; 0x10be <nokia_lcd_set_cursor>
     7f2:	61 e0       	ldi	r22, 0x01	; 1
     7f4:	88 e3       	ldi	r24, 0x38	; 56
     7f6:	91 e0       	ldi	r25, 0x01	; 1
     7f8:	50 d4       	rcall	.+2208   	; 0x109a <nokia_lcd_write_string>
     7fa:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <bt_paired>
     7fe:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <bt_paired+0x1>
     802:	01 97       	sbiw	r24, 0x01	; 1
     804:	39 f4       	brne	.+14     	; 0x814 <SM1_Menu+0x90>
     806:	69 e0       	ldi	r22, 0x09	; 9
     808:	84 e1       	ldi	r24, 0x14	; 20
     80a:	59 d4       	rcall	.+2226   	; 0x10be <nokia_lcd_set_cursor>
     80c:	61 e0       	ldi	r22, 0x01	; 1
     80e:	83 e4       	ldi	r24, 0x43	; 67
     810:	91 e0       	ldi	r25, 0x01	; 1
     812:	43 d4       	rcall	.+2182   	; 0x109a <nokia_lcd_write_string>
     814:	59 d4       	rcall	.+2226   	; 0x10c8 <nokia_lcd_render>
     816:	2d c1       	rjmp	.+602    	; 0xa72 <SM1_Menu+0x2ee>
     818:	18 99       	sbic	0x03, 0	; 3
     81a:	2c c0       	rjmp	.+88     	; 0x874 <SM1_Menu+0xf0>
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <bt_paired+0x1>
     824:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <bt_paired>
     828:	52 d3       	rcall	.+1700   	; 0xece <nokia_lcd_clear>
     82a:	60 e0       	ldi	r22, 0x00	; 0
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	47 d4       	rcall	.+2190   	; 0x10be <nokia_lcd_set_cursor>
     830:	61 e0       	ldi	r22, 0x01	; 1
     832:	8a e1       	ldi	r24, 0x1A	; 26
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	31 d4       	rcall	.+2146   	; 0x109a <nokia_lcd_write_string>
     838:	69 e0       	ldi	r22, 0x09	; 9
     83a:	84 e1       	ldi	r24, 0x14	; 20
     83c:	40 d4       	rcall	.+2176   	; 0x10be <nokia_lcd_set_cursor>
     83e:	61 e0       	ldi	r22, 0x01	; 1
     840:	83 e4       	ldi	r24, 0x43	; 67
     842:	91 e0       	ldi	r25, 0x01	; 1
     844:	2a d4       	rcall	.+2132   	; 0x109a <nokia_lcd_write_string>
     846:	69 e1       	ldi	r22, 0x19	; 25
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	39 d4       	rcall	.+2162   	; 0x10be <nokia_lcd_set_cursor>
     84c:	61 e0       	ldi	r22, 0x01	; 1
     84e:	86 e3       	ldi	r24, 0x36	; 54
     850:	91 e0       	ldi	r25, 0x01	; 1
     852:	23 d4       	rcall	.+2118   	; 0x109a <nokia_lcd_write_string>
     854:	69 e1       	ldi	r22, 0x19	; 25
     856:	85 e0       	ldi	r24, 0x05	; 5
     858:	32 d4       	rcall	.+2148   	; 0x10be <nokia_lcd_set_cursor>
     85a:	61 e0       	ldi	r22, 0x01	; 1
     85c:	89 e2       	ldi	r24, 0x29	; 41
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	1c d4       	rcall	.+2104   	; 0x109a <nokia_lcd_write_string>
     862:	63 e2       	ldi	r22, 0x23	; 35
     864:	85 e0       	ldi	r24, 0x05	; 5
     866:	2b d4       	rcall	.+2134   	; 0x10be <nokia_lcd_set_cursor>
     868:	61 e0       	ldi	r22, 0x01	; 1
     86a:	88 e3       	ldi	r24, 0x38	; 56
     86c:	91 e0       	ldi	r25, 0x01	; 1
     86e:	15 d4       	rcall	.+2090   	; 0x109a <nokia_lcd_write_string>
     870:	2b d4       	rcall	.+2134   	; 0x10c8 <nokia_lcd_render>
     872:	03 c1       	rjmp	.+518    	; 0xa7a <SM1_Menu+0x2f6>
     874:	19 99       	sbic	0x03, 1	; 3
     876:	23 c0       	rjmp	.+70     	; 0x8be <SM1_Menu+0x13a>
     878:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <bt_paired+0x1>
     87c:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <bt_paired>
     880:	26 d3       	rcall	.+1612   	; 0xece <nokia_lcd_clear>
     882:	60 e0       	ldi	r22, 0x00	; 0
     884:	80 e0       	ldi	r24, 0x00	; 0
     886:	1b d4       	rcall	.+2102   	; 0x10be <nokia_lcd_set_cursor>
     888:	61 e0       	ldi	r22, 0x01	; 1
     88a:	8a e1       	ldi	r24, 0x1A	; 26
     88c:	91 e0       	ldi	r25, 0x01	; 1
     88e:	05 d4       	rcall	.+2058   	; 0x109a <nokia_lcd_write_string>
     890:	69 e1       	ldi	r22, 0x19	; 25
     892:	80 e0       	ldi	r24, 0x00	; 0
     894:	14 d4       	rcall	.+2088   	; 0x10be <nokia_lcd_set_cursor>
     896:	61 e0       	ldi	r22, 0x01	; 1
     898:	86 e3       	ldi	r24, 0x36	; 54
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	fe d3       	rcall	.+2044   	; 0x109a <nokia_lcd_write_string>
     89e:	69 e1       	ldi	r22, 0x19	; 25
     8a0:	85 e0       	ldi	r24, 0x05	; 5
     8a2:	0d d4       	rcall	.+2074   	; 0x10be <nokia_lcd_set_cursor>
     8a4:	61 e0       	ldi	r22, 0x01	; 1
     8a6:	89 e2       	ldi	r24, 0x29	; 41
     8a8:	91 e0       	ldi	r25, 0x01	; 1
     8aa:	f7 d3       	rcall	.+2030   	; 0x109a <nokia_lcd_write_string>
     8ac:	63 e2       	ldi	r22, 0x23	; 35
     8ae:	85 e0       	ldi	r24, 0x05	; 5
     8b0:	06 d4       	rcall	.+2060   	; 0x10be <nokia_lcd_set_cursor>
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	88 e3       	ldi	r24, 0x38	; 56
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	f0 d3       	rcall	.+2016   	; 0x109a <nokia_lcd_write_string>
     8ba:	06 d4       	rcall	.+2060   	; 0x10c8 <nokia_lcd_render>
     8bc:	de c0       	rjmp	.+444    	; 0xa7a <SM1_Menu+0x2f6>
     8be:	02 99       	sbic	0x00, 2	; 0
     8c0:	dc c0       	rjmp	.+440    	; 0xa7a <SM1_Menu+0x2f6>
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	90 93 70 01 	sts	0x0170, r25	; 0x800170 <mode+0x1>
     8ca:	80 93 6f 01 	sts	0x016F, r24	; 0x80016f <mode>
     8ce:	d5 c0       	rjmp	.+426    	; 0xa7a <SM1_Menu+0x2f6>
     8d0:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <up>
     8d4:	90 91 f5 03 	lds	r25, 0x03F5	; 0x8003f5 <up+0x1>
     8d8:	01 97       	sbiw	r24, 0x01	; 1
     8da:	61 f5       	brne	.+88     	; 0x934 <SM1_Menu+0x1b0>
     8dc:	f8 d2       	rcall	.+1520   	; 0xece <nokia_lcd_clear>
     8de:	60 e0       	ldi	r22, 0x00	; 0
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	ed d3       	rcall	.+2010   	; 0x10be <nokia_lcd_set_cursor>
     8e4:	61 e0       	ldi	r22, 0x01	; 1
     8e6:	8a e1       	ldi	r24, 0x1A	; 26
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	d7 d3       	rcall	.+1966   	; 0x109a <nokia_lcd_write_string>
     8ec:	69 e1       	ldi	r22, 0x19	; 25
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	e6 d3       	rcall	.+1996   	; 0x10be <nokia_lcd_set_cursor>
     8f2:	61 e0       	ldi	r22, 0x01	; 1
     8f4:	86 e3       	ldi	r24, 0x36	; 54
     8f6:	91 e0       	ldi	r25, 0x01	; 1
     8f8:	d0 d3       	rcall	.+1952   	; 0x109a <nokia_lcd_write_string>
     8fa:	69 e1       	ldi	r22, 0x19	; 25
     8fc:	85 e0       	ldi	r24, 0x05	; 5
     8fe:	df d3       	rcall	.+1982   	; 0x10be <nokia_lcd_set_cursor>
     900:	61 e0       	ldi	r22, 0x01	; 1
     902:	89 e2       	ldi	r24, 0x29	; 41
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	c9 d3       	rcall	.+1938   	; 0x109a <nokia_lcd_write_string>
     908:	63 e2       	ldi	r22, 0x23	; 35
     90a:	85 e0       	ldi	r24, 0x05	; 5
     90c:	d8 d3       	rcall	.+1968   	; 0x10be <nokia_lcd_set_cursor>
     90e:	61 e0       	ldi	r22, 0x01	; 1
     910:	88 e3       	ldi	r24, 0x38	; 56
     912:	91 e0       	ldi	r25, 0x01	; 1
     914:	c2 d3       	rcall	.+1924   	; 0x109a <nokia_lcd_write_string>
     916:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <bt_paired>
     91a:	90 91 72 01 	lds	r25, 0x0172	; 0x800172 <bt_paired+0x1>
     91e:	01 97       	sbiw	r24, 0x01	; 1
     920:	39 f4       	brne	.+14     	; 0x930 <SM1_Menu+0x1ac>
     922:	69 e0       	ldi	r22, 0x09	; 9
     924:	84 e1       	ldi	r24, 0x14	; 20
     926:	cb d3       	rcall	.+1942   	; 0x10be <nokia_lcd_set_cursor>
     928:	61 e0       	ldi	r22, 0x01	; 1
     92a:	83 e4       	ldi	r24, 0x43	; 67
     92c:	91 e0       	ldi	r25, 0x01	; 1
     92e:	b5 d3       	rcall	.+1898   	; 0x109a <nokia_lcd_write_string>
     930:	cb d3       	rcall	.+1942   	; 0x10c8 <nokia_lcd_render>
     932:	a3 c0       	rjmp	.+326    	; 0xa7a <SM1_Menu+0x2f6>
     934:	18 99       	sbic	0x03, 0	; 3
     936:	2c c0       	rjmp	.+88     	; 0x990 <SM1_Menu+0x20c>
     938:	81 e0       	ldi	r24, 0x01	; 1
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <bt_paired+0x1>
     940:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <bt_paired>
     944:	c4 d2       	rcall	.+1416   	; 0xece <nokia_lcd_clear>
     946:	60 e0       	ldi	r22, 0x00	; 0
     948:	80 e0       	ldi	r24, 0x00	; 0
     94a:	b9 d3       	rcall	.+1906   	; 0x10be <nokia_lcd_set_cursor>
     94c:	61 e0       	ldi	r22, 0x01	; 1
     94e:	8a e1       	ldi	r24, 0x1A	; 26
     950:	91 e0       	ldi	r25, 0x01	; 1
     952:	a3 d3       	rcall	.+1862   	; 0x109a <nokia_lcd_write_string>
     954:	69 e0       	ldi	r22, 0x09	; 9
     956:	84 e1       	ldi	r24, 0x14	; 20
     958:	b2 d3       	rcall	.+1892   	; 0x10be <nokia_lcd_set_cursor>
     95a:	61 e0       	ldi	r22, 0x01	; 1
     95c:	83 e4       	ldi	r24, 0x43	; 67
     95e:	91 e0       	ldi	r25, 0x01	; 1
     960:	9c d3       	rcall	.+1848   	; 0x109a <nokia_lcd_write_string>
     962:	69 e1       	ldi	r22, 0x19	; 25
     964:	85 e0       	ldi	r24, 0x05	; 5
     966:	ab d3       	rcall	.+1878   	; 0x10be <nokia_lcd_set_cursor>
     968:	61 e0       	ldi	r22, 0x01	; 1
     96a:	89 e2       	ldi	r24, 0x29	; 41
     96c:	91 e0       	ldi	r25, 0x01	; 1
     96e:	95 d3       	rcall	.+1834   	; 0x109a <nokia_lcd_write_string>
     970:	63 e2       	ldi	r22, 0x23	; 35
     972:	80 e0       	ldi	r24, 0x00	; 0
     974:	a4 d3       	rcall	.+1864   	; 0x10be <nokia_lcd_set_cursor>
     976:	61 e0       	ldi	r22, 0x01	; 1
     978:	86 e3       	ldi	r24, 0x36	; 54
     97a:	91 e0       	ldi	r25, 0x01	; 1
     97c:	8e d3       	rcall	.+1820   	; 0x109a <nokia_lcd_write_string>
     97e:	63 e2       	ldi	r22, 0x23	; 35
     980:	85 e0       	ldi	r24, 0x05	; 5
     982:	9d d3       	rcall	.+1850   	; 0x10be <nokia_lcd_set_cursor>
     984:	61 e0       	ldi	r22, 0x01	; 1
     986:	88 e3       	ldi	r24, 0x38	; 56
     988:	91 e0       	ldi	r25, 0x01	; 1
     98a:	87 d3       	rcall	.+1806   	; 0x109a <nokia_lcd_write_string>
     98c:	9d d3       	rcall	.+1850   	; 0x10c8 <nokia_lcd_render>
     98e:	71 c0       	rjmp	.+226    	; 0xa72 <SM1_Menu+0x2ee>
     990:	19 99       	sbic	0x03, 1	; 3
     992:	6f c0       	rjmp	.+222    	; 0xa72 <SM1_Menu+0x2ee>
     994:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <bt_paired+0x1>
     998:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <bt_paired>
     99c:	98 d2       	rcall	.+1328   	; 0xece <nokia_lcd_clear>
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	80 e0       	ldi	r24, 0x00	; 0
     9a2:	8d d3       	rcall	.+1818   	; 0x10be <nokia_lcd_set_cursor>
     9a4:	61 e0       	ldi	r22, 0x01	; 1
     9a6:	8a e1       	ldi	r24, 0x1A	; 26
     9a8:	91 e0       	ldi	r25, 0x01	; 1
     9aa:	77 d3       	rcall	.+1774   	; 0x109a <nokia_lcd_write_string>
     9ac:	69 e1       	ldi	r22, 0x19	; 25
     9ae:	85 e0       	ldi	r24, 0x05	; 5
     9b0:	86 d3       	rcall	.+1804   	; 0x10be <nokia_lcd_set_cursor>
     9b2:	61 e0       	ldi	r22, 0x01	; 1
     9b4:	89 e2       	ldi	r24, 0x29	; 41
     9b6:	91 e0       	ldi	r25, 0x01	; 1
     9b8:	70 d3       	rcall	.+1760   	; 0x109a <nokia_lcd_write_string>
     9ba:	63 e2       	ldi	r22, 0x23	; 35
     9bc:	80 e0       	ldi	r24, 0x00	; 0
     9be:	7f d3       	rcall	.+1790   	; 0x10be <nokia_lcd_set_cursor>
     9c0:	61 e0       	ldi	r22, 0x01	; 1
     9c2:	86 e3       	ldi	r24, 0x36	; 54
     9c4:	91 e0       	ldi	r25, 0x01	; 1
     9c6:	69 d3       	rcall	.+1746   	; 0x109a <nokia_lcd_write_string>
     9c8:	63 e2       	ldi	r22, 0x23	; 35
     9ca:	85 e0       	ldi	r24, 0x05	; 5
     9cc:	78 d3       	rcall	.+1776   	; 0x10be <nokia_lcd_set_cursor>
     9ce:	61 e0       	ldi	r22, 0x01	; 1
     9d0:	88 e3       	ldi	r24, 0x38	; 56
     9d2:	91 e0       	ldi	r25, 0x01	; 1
     9d4:	62 d3       	rcall	.+1732   	; 0x109a <nokia_lcd_write_string>
     9d6:	78 d3       	rcall	.+1776   	; 0x10c8 <nokia_lcd_render>
     9d8:	4c c0       	rjmp	.+152    	; 0xa72 <SM1_Menu+0x2ee>
     9da:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <up>
     9de:	90 91 f5 03 	lds	r25, 0x03F5	; 0x8003f5 <up+0x1>
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	09 f0       	breq	.+2      	; 0x9e8 <SM1_Menu+0x264>
     9e6:	40 c0       	rjmp	.+128    	; 0xa68 <SM1_Menu+0x2e4>
     9e8:	72 d2       	rcall	.+1252   	; 0xece <nokia_lcd_clear>
     9ea:	60 e0       	ldi	r22, 0x00	; 0
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	67 d3       	rcall	.+1742   	; 0x10be <nokia_lcd_set_cursor>
     9f0:	61 e0       	ldi	r22, 0x01	; 1
     9f2:	8a e1       	ldi	r24, 0x1A	; 26
     9f4:	91 e0       	ldi	r25, 0x01	; 1
     9f6:	51 d3       	rcall	.+1698   	; 0x109a <nokia_lcd_write_string>
     9f8:	69 e1       	ldi	r22, 0x19	; 25
     9fa:	85 e0       	ldi	r24, 0x05	; 5
     9fc:	60 d3       	rcall	.+1728   	; 0x10be <nokia_lcd_set_cursor>
     9fe:	61 e0       	ldi	r22, 0x01	; 1
     a00:	89 e2       	ldi	r24, 0x29	; 41
     a02:	91 e0       	ldi	r25, 0x01	; 1
     a04:	4a d3       	rcall	.+1684   	; 0x109a <nokia_lcd_write_string>
     a06:	69 e1       	ldi	r22, 0x19	; 25
     a08:	80 e0       	ldi	r24, 0x00	; 0
     a0a:	59 d3       	rcall	.+1714   	; 0x10be <nokia_lcd_set_cursor>
     a0c:	61 e0       	ldi	r22, 0x01	; 1
     a0e:	86 e3       	ldi	r24, 0x36	; 54
     a10:	91 e0       	ldi	r25, 0x01	; 1
     a12:	43 d3       	rcall	.+1670   	; 0x109a <nokia_lcd_write_string>
     a14:	63 e2       	ldi	r22, 0x23	; 35
     a16:	85 e0       	ldi	r24, 0x05	; 5
     a18:	52 d3       	rcall	.+1700   	; 0x10be <nokia_lcd_set_cursor>
     a1a:	61 e0       	ldi	r22, 0x01	; 1
     a1c:	88 e3       	ldi	r24, 0x38	; 56
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	3c d3       	rcall	.+1656   	; 0x109a <nokia_lcd_write_string>
     a22:	52 d3       	rcall	.+1700   	; 0x10c8 <nokia_lcd_render>
     a24:	26 c0       	rjmp	.+76     	; 0xa72 <SM1_Menu+0x2ee>
     a26:	53 d2       	rcall	.+1190   	; 0xece <nokia_lcd_clear>
     a28:	60 e0       	ldi	r22, 0x00	; 0
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 d3       	rcall	.+1680   	; 0x10be <nokia_lcd_set_cursor>
     a2e:	61 e0       	ldi	r22, 0x01	; 1
     a30:	8a e1       	ldi	r24, 0x1A	; 26
     a32:	91 e0       	ldi	r25, 0x01	; 1
     a34:	32 d3       	rcall	.+1636   	; 0x109a <nokia_lcd_write_string>
     a36:	69 e1       	ldi	r22, 0x19	; 25
     a38:	80 e0       	ldi	r24, 0x00	; 0
     a3a:	41 d3       	rcall	.+1666   	; 0x10be <nokia_lcd_set_cursor>
     a3c:	61 e0       	ldi	r22, 0x01	; 1
     a3e:	86 e3       	ldi	r24, 0x36	; 54
     a40:	91 e0       	ldi	r25, 0x01	; 1
     a42:	2b d3       	rcall	.+1622   	; 0x109a <nokia_lcd_write_string>
     a44:	69 e1       	ldi	r22, 0x19	; 25
     a46:	85 e0       	ldi	r24, 0x05	; 5
     a48:	3a d3       	rcall	.+1652   	; 0x10be <nokia_lcd_set_cursor>
     a4a:	61 e0       	ldi	r22, 0x01	; 1
     a4c:	89 e2       	ldi	r24, 0x29	; 41
     a4e:	91 e0       	ldi	r25, 0x01	; 1
     a50:	24 d3       	rcall	.+1608   	; 0x109a <nokia_lcd_write_string>
     a52:	63 e2       	ldi	r22, 0x23	; 35
     a54:	85 e0       	ldi	r24, 0x05	; 5
     a56:	33 d3       	rcall	.+1638   	; 0x10be <nokia_lcd_set_cursor>
     a58:	61 e0       	ldi	r22, 0x01	; 1
     a5a:	88 e3       	ldi	r24, 0x38	; 56
     a5c:	91 e0       	ldi	r25, 0x01	; 1
     a5e:	1d d3       	rcall	.+1594   	; 0x109a <nokia_lcd_write_string>
     a60:	33 d3       	rcall	.+1638   	; 0x10c8 <nokia_lcd_render>
     a62:	c0 e0       	ldi	r28, 0x00	; 0
     a64:	d0 e0       	ldi	r29, 0x00	; 0
     a66:	0c c0       	rjmp	.+24     	; 0xa80 <SM1_Menu+0x2fc>
     a68:	7c de       	rcall	.-776    	; 0x762 <resetJoystick>
     a6a:	0a c0       	rjmp	.+20     	; 0xa80 <SM1_Menu+0x2fc>
     a6c:	cf ef       	ldi	r28, 0xFF	; 255
     a6e:	df ef       	ldi	r29, 0xFF	; 255
     a70:	07 c0       	rjmp	.+14     	; 0xa80 <SM1_Menu+0x2fc>
     a72:	77 de       	rcall	.-786    	; 0x762 <resetJoystick>
     a74:	c2 e0       	ldi	r28, 0x02	; 2
     a76:	d0 e0       	ldi	r29, 0x00	; 0
     a78:	03 c0       	rjmp	.+6      	; 0xa80 <SM1_Menu+0x2fc>
     a7a:	73 de       	rcall	.-794    	; 0x762 <resetJoystick>
     a7c:	c1 e0       	ldi	r28, 0x01	; 1
     a7e:	d0 e0       	ldi	r29, 0x00	; 0
     a80:	ce 01       	movw	r24, r28
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	08 95       	ret

00000a88 <TimerSet>:
     a88:	60 93 10 01 	sts	0x0110, r22	; 0x800110 <_avr_timer_M>
     a8c:	70 93 11 01 	sts	0x0111, r23	; 0x800111 <_avr_timer_M+0x1>
     a90:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <_avr_timer_M+0x2>
     a94:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <_avr_timer_M+0x3>
     a98:	60 93 74 01 	sts	0x0174, r22	; 0x800174 <_avr_timer_cntcurr>
     a9c:	70 93 75 01 	sts	0x0175, r23	; 0x800175 <_avr_timer_cntcurr+0x1>
     aa0:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <_avr_timer_cntcurr+0x2>
     aa4:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <_avr_timer_cntcurr+0x3>
     aa8:	08 95       	ret

00000aaa <TimerOn>:
     aaa:	8b e0       	ldi	r24, 0x0B	; 11
     aac:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     ab0:	8d e7       	ldi	r24, 0x7D	; 125
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     ab8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     abc:	82 e0       	ldi	r24, 0x02	; 2
     abe:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     ac2:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     ac6:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     aca:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_avr_timer_M>
     ace:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_avr_timer_M+0x1>
     ad2:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <_avr_timer_M+0x2>
     ad6:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <_avr_timer_M+0x3>
     ada:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <_avr_timer_cntcurr>
     ade:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <_avr_timer_cntcurr+0x1>
     ae2:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <_avr_timer_cntcurr+0x2>
     ae6:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <_avr_timer_cntcurr+0x3>
     aea:	8f b7       	in	r24, 0x3f	; 63
     aec:	80 68       	ori	r24, 0x80	; 128
     aee:	8f bf       	out	0x3f, r24	; 63
     af0:	08 95       	ret

00000af2 <__vector_13>:
     af2:	1f 92       	push	r1
     af4:	0f 92       	push	r0
     af6:	0f b6       	in	r0, 0x3f	; 63
     af8:	0f 92       	push	r0
     afa:	11 24       	eor	r1, r1
     afc:	8f 93       	push	r24
     afe:	9f 93       	push	r25
     b00:	af 93       	push	r26
     b02:	bf 93       	push	r27
     b04:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <_avr_timer_cntcurr>
     b08:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <_avr_timer_cntcurr+0x1>
     b0c:	a0 91 76 01 	lds	r26, 0x0176	; 0x800176 <_avr_timer_cntcurr+0x2>
     b10:	b0 91 77 01 	lds	r27, 0x0177	; 0x800177 <_avr_timer_cntcurr+0x3>
     b14:	01 97       	sbiw	r24, 0x01	; 1
     b16:	a1 09       	sbc	r26, r1
     b18:	b1 09       	sbc	r27, r1
     b1a:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <_avr_timer_cntcurr>
     b1e:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <_avr_timer_cntcurr+0x1>
     b22:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <_avr_timer_cntcurr+0x2>
     b26:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <_avr_timer_cntcurr+0x3>
     b2a:	89 2b       	or	r24, r25
     b2c:	8a 2b       	or	r24, r26
     b2e:	8b 2b       	or	r24, r27
     b30:	99 f4       	brne	.+38     	; 0xb58 <__vector_13+0x66>
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <TimerFlag>
     b38:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <_avr_timer_M>
     b3c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <_avr_timer_M+0x1>
     b40:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <_avr_timer_M+0x2>
     b44:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <_avr_timer_M+0x3>
     b48:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <_avr_timer_cntcurr>
     b4c:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <_avr_timer_cntcurr+0x1>
     b50:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <_avr_timer_cntcurr+0x2>
     b54:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <_avr_timer_cntcurr+0x3>
     b58:	bf 91       	pop	r27
     b5a:	af 91       	pop	r26
     b5c:	9f 91       	pop	r25
     b5e:	8f 91       	pop	r24
     b60:	0f 90       	pop	r0
     b62:	0f be       	out	0x3f, r0	; 63
     b64:	0f 90       	pop	r0
     b66:	1f 90       	pop	r1
     b68:	18 95       	reti

00000b6a <init_gametable>:
     b6a:	e3 e7       	ldi	r30, 0x73	; 115
     b6c:	f3 e0       	ldi	r31, 0x03	; 3
     b6e:	23 ef       	ldi	r18, 0xF3	; 243
     b70:	33 e0       	ldi	r19, 0x03	; 3
     b72:	09 c0       	rjmp	.+18     	; 0xb86 <init_gametable+0x1c>
     b74:	11 92       	st	Z+, r1
     b76:	11 92       	st	Z+, r1
     b78:	e8 17       	cp	r30, r24
     b7a:	f9 07       	cpc	r31, r25
     b7c:	d9 f7       	brne	.-10     	; 0xb74 <init_gametable+0xa>
     b7e:	fc 01       	movw	r30, r24
     b80:	28 17       	cp	r18, r24
     b82:	39 07       	cpc	r19, r25
     b84:	19 f0       	breq	.+6      	; 0xb8c <init_gametable+0x22>
     b86:	cf 01       	movw	r24, r30
     b88:	40 96       	adiw	r24, 0x10	; 16
     b8a:	f4 cf       	rjmp	.-24     	; 0xb74 <init_gametable+0xa>
     b8c:	08 95       	ret

00000b8e <row_init>:
     b8e:	cf 93       	push	r28
     b90:	df 93       	push	r29
     b92:	ec 01       	movw	r28, r24
     b94:	fc 01       	movw	r30, r24
     b96:	9c 01       	movw	r18, r24
     b98:	20 5f       	subi	r18, 0xF0	; 240
     b9a:	3f 4f       	sbci	r19, 0xFF	; 255
     b9c:	9f ef       	ldi	r25, 0xFF	; 255
     b9e:	a0 81       	ld	r26, Z
     ba0:	b1 81       	ldd	r27, Z+1	; 0x01
     ba2:	11 96       	adiw	r26, 0x01	; 1
     ba4:	9c 93       	st	X, r25
     ba6:	a1 91       	ld	r26, Z+
     ba8:	b1 91       	ld	r27, Z+
     baa:	9c 93       	st	X, r25
     bac:	e2 17       	cp	r30, r18
     bae:	f3 07       	cpc	r31, r19
     bb0:	b1 f7       	brne	.-20     	; 0xb9e <row_init+0x10>
     bb2:	e8 81       	ld	r30, Y
     bb4:	f9 81       	ldd	r31, Y+1	; 0x01
     bb6:	81 e0       	ldi	r24, 0x01	; 1
     bb8:	82 83       	std	Z+2, r24	; 0x02
     bba:	ea 81       	ldd	r30, Y+2	; 0x02
     bbc:	fb 81       	ldd	r31, Y+3	; 0x03
     bbe:	82 e0       	ldi	r24, 0x02	; 2
     bc0:	82 83       	std	Z+2, r24	; 0x02
     bc2:	ec 81       	ldd	r30, Y+4	; 0x04
     bc4:	fd 81       	ldd	r31, Y+5	; 0x05
     bc6:	84 e0       	ldi	r24, 0x04	; 4
     bc8:	82 83       	std	Z+2, r24	; 0x02
     bca:	ee 81       	ldd	r30, Y+6	; 0x06
     bcc:	ff 81       	ldd	r31, Y+7	; 0x07
     bce:	88 e0       	ldi	r24, 0x08	; 8
     bd0:	82 83       	std	Z+2, r24	; 0x02
     bd2:	e8 85       	ldd	r30, Y+8	; 0x08
     bd4:	f9 85       	ldd	r31, Y+9	; 0x09
     bd6:	80 e1       	ldi	r24, 0x10	; 16
     bd8:	82 83       	std	Z+2, r24	; 0x02
     bda:	ea 85       	ldd	r30, Y+10	; 0x0a
     bdc:	fb 85       	ldd	r31, Y+11	; 0x0b
     bde:	80 e2       	ldi	r24, 0x20	; 32
     be0:	82 83       	std	Z+2, r24	; 0x02
     be2:	ec 85       	ldd	r30, Y+12	; 0x0c
     be4:	fd 85       	ldd	r31, Y+13	; 0x0d
     be6:	80 e4       	ldi	r24, 0x40	; 64
     be8:	82 83       	std	Z+2, r24	; 0x02
     bea:	ee 85       	ldd	r30, Y+14	; 0x0e
     bec:	ff 85       	ldd	r31, Y+15	; 0x0f
     bee:	80 e8       	ldi	r24, 0x80	; 128
     bf0:	82 83       	std	Z+2, r24	; 0x02
     bf2:	df 91       	pop	r29
     bf4:	cf 91       	pop	r28
     bf6:	08 95       	ret

00000bf8 <SPI_SlaveInit>:

void SPI_SlaveInit(void) {
	DDRB = 0x40; PORTB = 0xBF;
     bf8:	80 e4       	ldi	r24, 0x40	; 64
     bfa:	84 b9       	out	0x04, r24	; 4
     bfc:	8f eb       	ldi	r24, 0xBF	; 191
     bfe:	85 b9       	out	0x05, r24	; 5
	SPCR |= (1<<SPIE)|(1<<SPE);
     c00:	8c b5       	in	r24, 0x2c	; 44
     c02:	80 6c       	ori	r24, 0xC0	; 192
     c04:	8c bd       	out	0x2c, r24	; 44
	SREG |= 0x80;
     c06:	8f b7       	in	r24, 0x3f	; 63
     c08:	80 68       	ori	r24, 0x80	; 128
     c0a:	8f bf       	out	0x3f, r24	; 63
     c0c:	08 95       	ret

00000c0e <SPI_ServantTransmit>:
	//sei();
}

void SPI_ServantTransmit(unsigned char cData){
	SPDR = cData;
     c0e:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1 <<SPIF))){
     c10:	0d b4       	in	r0, 0x2d	; 45
     c12:	07 fe       	sbrs	r0, 7
     c14:	fd cf       	rjmp	.-6      	; 0xc10 <SPI_ServantTransmit+0x2>

	};
}
     c16:	08 95       	ret

00000c18 <__vector_19>:

ISR(SPI_STC_vect){
     c18:	1f 92       	push	r1
     c1a:	0f 92       	push	r0
     c1c:	0f b6       	in	r0, 0x3f	; 63
     c1e:	0f 92       	push	r0
     c20:	11 24       	eor	r1, r1
     c22:	0b b6       	in	r0, 0x3b	; 59
     c24:	0f 92       	push	r0
     c26:	2f 93       	push	r18
     c28:	3f 93       	push	r19
     c2a:	4f 93       	push	r20
     c2c:	5f 93       	push	r21
     c2e:	6f 93       	push	r22
     c30:	7f 93       	push	r23
     c32:	8f 93       	push	r24
     c34:	9f 93       	push	r25
     c36:	af 93       	push	r26
     c38:	bf 93       	push	r27
     c3a:	ef 93       	push	r30
     c3c:	ff 93       	push	r31
	receivedData = SPDR;
     c3e:	8e b5       	in	r24, 0x2e	; 46
     c40:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <receivedData>
	PORTD |= 0x40;
     c44:	5e 9a       	sbi	0x0b, 6	; 11
	SPI_ServantTransmit(0xFF); 
     c46:	8f ef       	ldi	r24, 0xFF	; 255
     c48:	e2 df       	rcall	.-60     	; 0xc0e <SPI_ServantTransmit>
}
     c4a:	ff 91       	pop	r31
     c4c:	ef 91       	pop	r30
     c4e:	bf 91       	pop	r27
     c50:	af 91       	pop	r26
     c52:	9f 91       	pop	r25
     c54:	8f 91       	pop	r24
     c56:	7f 91       	pop	r23
     c58:	6f 91       	pop	r22
     c5a:	5f 91       	pop	r21
     c5c:	4f 91       	pop	r20
     c5e:	3f 91       	pop	r19
     c60:	2f 91       	pop	r18
     c62:	0f 90       	pop	r0
     c64:	0b be       	out	0x3b, r0	; 59
     c66:	0f 90       	pop	r0
     c68:	0f be       	out	0x3f, r0	; 63
     c6a:	0f 90       	pop	r0
     c6c:	1f 90       	pop	r1
     c6e:	18 95       	reti

00000c70 <main>:
	}
	return SM3_State; 
}

int main(void)
{
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	00 d0       	rcall	.+0      	; 0xc76 <main+0x6>
     c76:	00 d0       	rcall	.+0      	; 0xc78 <main+0x8>
     c78:	00 d0       	rcall	.+0      	; 0xc7a <main+0xa>
     c7a:	cd b7       	in	r28, 0x3d	; 61
     c7c:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0x00; PORTB = 0xFF; 
     c7e:	14 b8       	out	0x04, r1	; 4
     c80:	8f ef       	ldi	r24, 0xFF	; 255
     c82:	85 b9       	out	0x05, r24	; 5
	DDRD = 0xFF; PORTD = 0x00;
     c84:	8a b9       	out	0x0a, r24	; 10
     c86:	1b b8       	out	0x0b, r1	; 11
    ADC_init();
     c88:	eb dc       	rcall	.-1578   	; 0x660 <ADC_init>
    nokia_lcd_init();
     c8a:	eb d0       	rcall	.+470    	; 0xe62 <nokia_lcd_init>
    nokia_lcd_clear();
     c8c:	20 d1       	rcall	.+576    	; 0xece <nokia_lcd_clear>
     c8e:	b4 df       	rcall	.-152    	; 0xbf8 <SPI_SlaveInit>
	SPI_SlaveInit(); 
     c90:	80 e0       	ldi	r24, 0x00	; 0
	
	row_init(rows); 
     c92:	91 e0       	ldi	r25, 0x01	; 1
     c94:	7c df       	rcall	.-264    	; 0xb8e <row_init>
     c96:	69 df       	rcall	.-302    	; 0xb6a <init_gametable>
     c98:	0f 2e       	mov	r0, r31
	init_gametable();
     c9a:	f5 e0       	ldi	r31, 0x05	; 5
     c9c:	ef 2e       	mov	r14, r31
     c9e:	f0 2d       	mov	r31, r0
     ca0:	f1 2c       	mov	r15, r1
     ca2:	00 e0       	ldi	r16, 0x00	; 0
     ca4:	10 e0       	ldi	r17, 0x00	; 0
     ca6:	51 e0       	ldi	r21, 0x01	; 1
     ca8:	40 e0       	ldi	r20, 0x00	; 0
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	20 e0       	ldi	r18, 0x00	; 0
     cae:	04 c0       	rjmp	.+8      	; 0xcb8 <main+0x48>
     cb0:	e6 2e       	mov	r14, r22
     cb2:	f7 2e       	mov	r15, r23
     cb4:	08 2f       	mov	r16, r24
	unsigned long int c;
	while(1) {
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
     cb6:	19 2f       	mov	r17, r25
     cb8:	65 2f       	mov	r22, r21
     cba:	74 2f       	mov	r23, r20
     cbc:	83 2f       	mov	r24, r19

unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1) {
		c = a%b;
     cbe:	92 2f       	mov	r25, r18
     cc0:	2e 2d       	mov	r18, r14
     cc2:	3f 2d       	mov	r19, r15
     cc4:	40 2f       	mov	r20, r16
     cc6:	51 2f       	mov	r21, r17
     cc8:	22 d2       	rcall	.+1092   	; 0x110e <__udivmodsi4>
     cca:	5e 2d       	mov	r21, r14
     ccc:	4f 2d       	mov	r20, r15
     cce:	30 2f       	mov	r19, r16
     cd0:	21 2f       	mov	r18, r17
     cd2:	61 15       	cp	r22, r1
     cd4:	71 05       	cpc	r23, r1
     cd6:	81 05       	cpc	r24, r1
		if(c==0){return b;}
     cd8:	91 05       	cpc	r25, r1
     cda:	51 f7       	brne	.-44     	; 0xcb0 <main+0x40>
     cdc:	64 e6       	ldi	r22, 0x64	; 100
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	80 e0       	ldi	r24, 0x00	; 0
	unsigned long int tmpGCD = 1;
	tmpGCD = findGCD(SMTick1_calc, SMTick2_calc);
	tmpGCD = findGCD(tmpGCD, SMTick3_calc);
	unsigned long int GCD = tmpGCD;
	
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	2e 2d       	mov	r18, r14
     ce6:	3f 2d       	mov	r19, r15
     ce8:	40 2f       	mov	r20, r16
     cea:	51 2f       	mov	r21, r17
     cec:	10 d2       	rcall	.+1056   	; 0x110e <__udivmodsi4>
     cee:	29 01       	movw	r4, r18
     cf0:	3a 01       	movw	r6, r20
     cf2:	61 e0       	ldi	r22, 0x01	; 1
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	80 e0       	ldi	r24, 0x00	; 0
	unsigned long int SMTick2_period = SMTick2_calc/GCD;
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	2e 2d       	mov	r18, r14
     cfc:	3f 2d       	mov	r19, r15
     cfe:	40 2f       	mov	r20, r16
     d00:	51 2f       	mov	r21, r17
     d02:	05 d2       	rcall	.+1034   	; 0x110e <__udivmodsi4>
     d04:	49 01       	movw	r8, r18
     d06:	5a 01       	movw	r10, r20
     d08:	65 e0       	ldi	r22, 0x05	; 5
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	80 e0       	ldi	r24, 0x00	; 0
	unsigned long int SMTick3_period = SMTick3_calc/GCD;
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	2e 2d       	mov	r18, r14
     d12:	3f 2d       	mov	r19, r15
     d14:	40 2f       	mov	r20, r16
     d16:	51 2f       	mov	r21, r17
     d18:	fa d1       	rcall	.+1012   	; 0x110e <__udivmodsi4>
     d1a:	86 e0       	ldi	r24, 0x06	; 6
     d1c:	e4 e1       	ldi	r30, 0x14	; 20
     d1e:	f1 e0       	ldi	r31, 0x01	; 1
     d20:	de 01       	movw	r26, r28
	
	static task task1, task2, task3;
	task *tasks[] = {&task1, &task2, &task3};
     d22:	11 96       	adiw	r26, 0x01	; 1
     d24:	01 90       	ld	r0, Z+
     d26:	0d 92       	st	X+, r0
     d28:	8a 95       	dec	r24
     d2a:	e1 f7       	brne	.-8      	; 0xd24 <main+0xb4>
     d2c:	e4 e6       	ldi	r30, 0x64	; 100
     d2e:	f1 e0       	ldi	r31, 0x01	; 1
     d30:	6f ef       	ldi	r22, 0xFF	; 255
     d32:	60 83       	st	Z, r22
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	//task1
	task1.state = -1;//Task initial state.
     d34:	41 82       	std	Z+1, r4	; 0x01
     d36:	52 82       	std	Z+2, r5	; 0x02
     d38:	63 82       	std	Z+3, r6	; 0x03
     d3a:	74 82       	std	Z+4, r7	; 0x04
	task1.period = SMTick1_period;//Task Period.
     d3c:	45 82       	std	Z+5, r4	; 0x05
     d3e:	56 82       	std	Z+6, r5	; 0x06
     d40:	67 82       	std	Z+7, r6	; 0x07
     d42:	70 86       	std	Z+8, r7	; 0x08
	task1.elapsedTime = SMTick1_period;//Task current elapsed time.
     d44:	82 ec       	ldi	r24, 0xC2	; 194
     d46:	93 e0       	ldi	r25, 0x03	; 3
     d48:	92 87       	std	Z+10, r25	; 0x0a
     d4a:	81 87       	std	Z+9, r24	; 0x09
	task1.TickFct = &SM1_Menu;//Function pointer for the tick.
     d4c:	e9 e5       	ldi	r30, 0x59	; 89
     d4e:	f1 e0       	ldi	r31, 0x01	; 1
     d50:	60 83       	st	Z, r22
     d52:	81 82       	std	Z+1, r8	; 0x01
	
	//task2
	task2.state = -1;//Task initial state.
     d54:	92 82       	std	Z+2, r9	; 0x02
     d56:	a3 82       	std	Z+3, r10	; 0x03
     d58:	b4 82       	std	Z+4, r11	; 0x04
	task2.period = SMTick2_period;//Task Period.
     d5a:	85 82       	std	Z+5, r8	; 0x05
     d5c:	96 82       	std	Z+6, r9	; 0x06
     d5e:	a7 82       	std	Z+7, r10	; 0x07
     d60:	b0 86       	std	Z+8, r11	; 0x08
	task2.elapsedTime = SMTick2_period;//Task current elapsed time.
     d62:	80 ef       	ldi	r24, 0xF0	; 240
     d64:	91 e0       	ldi	r25, 0x01	; 1
     d66:	92 87       	std	Z+10, r25	; 0x0a
     d68:	81 87       	std	Z+9, r24	; 0x09
	task2.TickFct = &SM2_MatrixDisplay;//Function pointer for the tick.
     d6a:	ee e4       	ldi	r30, 0x4E	; 78
     d6c:	f1 e0       	ldi	r31, 0x01	; 1
     d6e:	60 83       	st	Z, r22
     d70:	21 83       	std	Z+1, r18	; 0x01
	
	//task3
	task3.state = -1;//Task initial state.
     d72:	32 83       	std	Z+2, r19	; 0x02
     d74:	43 83       	std	Z+3, r20	; 0x03
     d76:	54 83       	std	Z+4, r21	; 0x04
	task3.period = SMTick3_period;//Task Period.
     d78:	25 83       	std	Z+5, r18	; 0x05
     d7a:	36 83       	std	Z+6, r19	; 0x06
     d7c:	47 83       	std	Z+7, r20	; 0x07
     d7e:	50 87       	std	Z+8, r21	; 0x08
	task3.elapsedTime = SMTick3_period;//Task current elapsed time.
     d80:	8d e5       	ldi	r24, 0x5D	; 93
     d82:	91 e0       	ldi	r25, 0x01	; 1
     d84:	92 87       	std	Z+10, r25	; 0x0a
	task3.TickFct = &SM3_PiInterface;//Function pointer for the tick.
     d86:	81 87       	std	Z+9, r24	; 0x09
     d88:	6e 2d       	mov	r22, r14
     d8a:	7f 2d       	mov	r23, r15
     d8c:	80 2f       	mov	r24, r16
	
	TimerSet(GCD);
     d8e:	91 2f       	mov	r25, r17
     d90:	7b de       	rcall	.-778    	; 0xa88 <TimerSet>
     d92:	8b de       	rcall	.-746    	; 0xaaa <TimerOn>
     d94:	7e 01       	movw	r14, r28
     d96:	87 e0       	ldi	r24, 0x07	; 7
	TimerOn();
     d98:	e8 0e       	add	r14, r24
     d9a:	f1 1c       	adc	r15, r1
     d9c:	7d dc       	rcall	.-1798   	; 0x698 <joys_tick>
     d9e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <receivedData>
     da2:	88 23       	and	r24, r24
	
    while(1)
    {
		joys_tick(); 
     da4:	c9 f1       	breq	.+114    	; 0xe18 <main+0x1a8>
     da6:	5e 9a       	sbi	0x0b, 6	; 11
		if (receivedData != 0x00) {
     da8:	37 c0       	rjmp	.+110    	; 0xe18 <main+0x1a8>
     daa:	d6 01       	movw	r26, r12
     dac:	0d 91       	ld	r16, X+
     dae:	1d 91       	ld	r17, X+
			PORTD |= 0x40; 
     db0:	6d 01       	movw	r12, r26
     db2:	f8 01       	movw	r30, r16
			//nokia_lcd_clear();
		}
	    for (int i = 0; i < numTasks; i++ ) {
		    if ( tasks[i]->elapsedTime == tasks[i]->period ) {
     db4:	45 81       	ldd	r20, Z+5	; 0x05
     db6:	56 81       	ldd	r21, Z+6	; 0x06
     db8:	67 81       	ldd	r22, Z+7	; 0x07
     dba:	70 85       	ldd	r23, Z+8	; 0x08
     dbc:	81 81       	ldd	r24, Z+1	; 0x01
     dbe:	92 81       	ldd	r25, Z+2	; 0x02
     dc0:	a3 81       	ldd	r26, Z+3	; 0x03
     dc2:	b4 81       	ldd	r27, Z+4	; 0x04
     dc4:	48 17       	cp	r20, r24
     dc6:	59 07       	cpc	r21, r25
     dc8:	6a 07       	cpc	r22, r26
     dca:	7b 07       	cpc	r23, r27
     dcc:	79 f4       	brne	.+30     	; 0xdec <main+0x17c>
     dce:	80 81       	ld	r24, Z
     dd0:	01 84       	ldd	r0, Z+9	; 0x09
     dd2:	f2 85       	ldd	r31, Z+10	; 0x0a
     dd4:	e0 2d       	mov	r30, r0
     dd6:	08 2e       	mov	r0, r24
			    tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
     dd8:	00 0c       	add	r0, r0
     dda:	99 0b       	sbc	r25, r25
     ddc:	09 95       	icall
     dde:	d8 01       	movw	r26, r16
     de0:	8c 93       	st	X, r24
     de2:	f8 01       	movw	r30, r16
     de4:	15 82       	std	Z+5, r1	; 0x05
     de6:	16 82       	std	Z+6, r1	; 0x06
     de8:	17 82       	std	Z+7, r1	; 0x07
     dea:	10 86       	std	Z+8, r1	; 0x08
			    tasks[i]->elapsedTime = 0;
     dec:	f8 01       	movw	r30, r16
     dee:	85 81       	ldd	r24, Z+5	; 0x05
     df0:	96 81       	ldd	r25, Z+6	; 0x06
     df2:	a7 81       	ldd	r26, Z+7	; 0x07
     df4:	b0 85       	ldd	r27, Z+8	; 0x08
		    }
		    tasks[i]->elapsedTime += 1;
     df6:	01 96       	adiw	r24, 0x01	; 1
     df8:	a1 1d       	adc	r26, r1
     dfa:	b1 1d       	adc	r27, r1
     dfc:	85 83       	std	Z+5, r24	; 0x05
     dfe:	96 83       	std	Z+6, r25	; 0x06
     e00:	a7 83       	std	Z+7, r26	; 0x07
     e02:	b0 87       	std	Z+8, r27	; 0x08
     e04:	ce 14       	cp	r12, r14
     e06:	df 04       	cpc	r13, r15
     e08:	81 f6       	brne	.-96     	; 0xdaa <main+0x13a>
     e0a:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <TimerFlag>
		joys_tick(); 
		if (receivedData != 0x00) {
			PORTD |= 0x40; 
			//nokia_lcd_clear();
		}
	    for (int i = 0; i < numTasks; i++ ) {
     e0e:	88 23       	and	r24, r24
     e10:	e1 f3       	breq	.-8      	; 0xe0a <main+0x19a>
     e12:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <TimerFlag>
			    tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
			    tasks[i]->elapsedTime = 0;
		    }
		    tasks[i]->elapsedTime += 1;
	    }
	    while(!TimerFlag);
     e16:	c2 cf       	rjmp	.-124    	; 0xd9c <main+0x12c>
     e18:	ce 01       	movw	r24, r28
     e1a:	01 96       	adiw	r24, 0x01	; 1
	    TimerFlag = 0;
     e1c:	6c 01       	movw	r12, r24
     e1e:	c5 cf       	rjmp	.-118    	; 0xdaa <main+0x13a>

00000e20 <write>:
    }
     e20:	58 98       	cbi	0x0b, 0	; 11
     e22:	66 23       	and	r22, r22
     e24:	11 f0       	breq	.+4      	; 0xe2a <write+0xa>
     e26:	5a 9a       	sbi	0x0b, 2	; 11
     e28:	15 c0       	rjmp	.+42     	; 0xe54 <write+0x34>
		nokia_lcd.screen[i] = 0x00;
}

void nokia_lcd_power(uint8_t on)
{
	write_cmd(on ? 0x20 : 0x24);
     e2a:	5a 98       	cbi	0x0b, 2	; 11
     e2c:	13 c0       	rjmp	.+38     	; 0xe54 <write+0x34>
     e2e:	ac 01       	movw	r20, r24
     e30:	02 2e       	mov	r0, r18
     e32:	02 c0       	rjmp	.+4      	; 0xe38 <write+0x18>
     e34:	55 95       	asr	r21
     e36:	47 95       	ror	r20
     e38:	0a 94       	dec	r0
     e3a:	e2 f7       	brpl	.-8      	; 0xe34 <write+0x14>
     e3c:	40 ff       	sbrs	r20, 0
     e3e:	02 c0       	rjmp	.+4      	; 0xe44 <write+0x24>
     e40:	5b 9a       	sbi	0x0b, 3	; 11
     e42:	01 c0       	rjmp	.+2      	; 0xe46 <write+0x26>
     e44:	5b 98       	cbi	0x0b, 3	; 11
     e46:	5c 9a       	sbi	0x0b, 4	; 11
     e48:	5c 98       	cbi	0x0b, 4	; 11
     e4a:	21 50       	subi	r18, 0x01	; 1
     e4c:	31 09       	sbc	r19, r1
     e4e:	78 f7       	brcc	.-34     	; 0xe2e <write+0xe>
     e50:	58 9a       	sbi	0x0b, 0	; 11
     e52:	08 95       	ret
     e54:	27 e0       	ldi	r18, 0x07	; 7
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	e9 cf       	rjmp	.-46     	; 0xe2e <write+0xe>

00000e5c <write_cmd>:
     e5c:	60 e0       	ldi	r22, 0x00	; 0
     e5e:	e0 cf       	rjmp	.-64     	; 0xe20 <write>
     e60:	08 95       	ret

00000e62 <nokia_lcd_init>:
     e62:	cf 93       	push	r28
     e64:	df 93       	push	r29
     e66:	50 9a       	sbi	0x0a, 0	; 10
     e68:	51 9a       	sbi	0x0a, 1	; 10
     e6a:	52 9a       	sbi	0x0a, 2	; 10
     e6c:	53 9a       	sbi	0x0a, 3	; 10
     e6e:	54 9a       	sbi	0x0a, 4	; 10
     e70:	59 9a       	sbi	0x0b, 1	; 11
     e72:	58 9a       	sbi	0x0b, 0	; 11
     e74:	83 ec       	ldi	r24, 0xC3	; 195
     e76:	99 e0       	ldi	r25, 0x09	; 9
     e78:	01 97       	sbiw	r24, 0x01	; 1
     e7a:	f1 f7       	brne	.-4      	; 0xe78 <nokia_lcd_init+0x16>
     e7c:	00 c0       	rjmp	.+0      	; 0xe7e <nokia_lcd_init+0x1c>
     e7e:	00 00       	nop
     e80:	59 98       	cbi	0x0b, 1	; 11
     e82:	8b e5       	ldi	r24, 0x5B	; 91
     e84:	94 e4       	ldi	r25, 0x44	; 68
     e86:	01 97       	sbiw	r24, 0x01	; 1
     e88:	f1 f7       	brne	.-4      	; 0xe86 <nokia_lcd_init+0x24>
     e8a:	00 c0       	rjmp	.+0      	; 0xe8c <nokia_lcd_init+0x2a>
     e8c:	00 00       	nop
     e8e:	59 9a       	sbi	0x0b, 1	; 11
     e90:	58 98       	cbi	0x0b, 0	; 11
     e92:	81 e2       	ldi	r24, 0x21	; 33
     e94:	e3 df       	rcall	.-58     	; 0xe5c <write_cmd>
     e96:	83 e1       	ldi	r24, 0x13	; 19
     e98:	e1 df       	rcall	.-62     	; 0xe5c <write_cmd>
     e9a:	86 e0       	ldi	r24, 0x06	; 6
     e9c:	df df       	rcall	.-66     	; 0xe5c <write_cmd>
     e9e:	82 ec       	ldi	r24, 0xC2	; 194
     ea0:	dd df       	rcall	.-70     	; 0xe5c <write_cmd>
     ea2:	80 e2       	ldi	r24, 0x20	; 32
     ea4:	db df       	rcall	.-74     	; 0xe5c <write_cmd>
     ea6:	89 e0       	ldi	r24, 0x09	; 9
     ea8:	d9 df       	rcall	.-78     	; 0xe5c <write_cmd>
     eaa:	80 e8       	ldi	r24, 0x80	; 128
     eac:	d7 df       	rcall	.-82     	; 0xe5c <write_cmd>
     eae:	80 e4       	ldi	r24, 0x40	; 64
     eb0:	d5 df       	rcall	.-86     	; 0xe5c <write_cmd>
     eb2:	c8 ef       	ldi	r28, 0xF8	; 248
     eb4:	d1 e0       	ldi	r29, 0x01	; 1
     eb6:	61 e0       	ldi	r22, 0x01	; 1
     eb8:	80 e0       	ldi	r24, 0x00	; 0
     eba:	b2 df       	rcall	.-156    	; 0xe20 <write>
     ebc:	21 97       	sbiw	r28, 0x01	; 1
     ebe:	d9 f7       	brne	.-10     	; 0xeb6 <nokia_lcd_init+0x54>
     ec0:	88 e0       	ldi	r24, 0x08	; 8
     ec2:	cc df       	rcall	.-104    	; 0xe5c <write_cmd>
     ec4:	8c e0       	ldi	r24, 0x0C	; 12
     ec6:	ca df       	rcall	.-108    	; 0xe5c <write_cmd>
     ec8:	df 91       	pop	r29
     eca:	cf 91       	pop	r28
     ecc:	08 95       	ret

00000ece <nokia_lcd_clear>:
     ece:	80 e8       	ldi	r24, 0x80	; 128
     ed0:	c5 df       	rcall	.-118    	; 0xe5c <write_cmd>
     ed2:	80 e4       	ldi	r24, 0x40	; 64
     ed4:	c3 df       	rcall	.-122    	; 0xe5c <write_cmd>
     ed6:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
     eda:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <nokia_lcd+0x1f9>
     ede:	e9 e7       	ldi	r30, 0x79	; 121
     ee0:	f1 e0       	ldi	r31, 0x01	; 1
     ee2:	81 e7       	ldi	r24, 0x71	; 113
     ee4:	93 e0       	ldi	r25, 0x03	; 3
     ee6:	11 92       	st	Z+, r1
     ee8:	e8 17       	cp	r30, r24
     eea:	f9 07       	cpc	r31, r25
     eec:	e1 f7       	brne	.-8      	; 0xee6 <nokia_lcd_clear+0x18>
     eee:	08 95       	ret

00000ef0 <nokia_lcd_set_pixel>:
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     ef0:	26 2f       	mov	r18, r22
     ef2:	26 95       	lsr	r18
     ef4:	26 95       	lsr	r18
     ef6:	26 95       	lsr	r18
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	34 e5       	ldi	r19, 0x54	; 84
     efc:	23 9f       	mul	r18, r19
     efe:	80 0d       	add	r24, r0
     f00:	91 1d       	adc	r25, r1
     f02:	11 24       	eor	r1, r1
	if (value)
     f04:	44 23       	and	r20, r20
     f06:	79 f0       	breq	.+30     	; 0xf26 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
     f08:	fc 01       	movw	r30, r24
     f0a:	e7 58       	subi	r30, 0x87	; 135
     f0c:	fe 4f       	sbci	r31, 0xFE	; 254
     f0e:	67 70       	andi	r22, 0x07	; 7
     f10:	81 e0       	ldi	r24, 0x01	; 1
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <nokia_lcd_set_pixel+0x2a>
     f16:	88 0f       	add	r24, r24
     f18:	99 1f       	adc	r25, r25
     f1a:	6a 95       	dec	r22
     f1c:	e2 f7       	brpl	.-8      	; 0xf16 <nokia_lcd_set_pixel+0x26>
     f1e:	90 81       	ld	r25, Z
     f20:	89 2b       	or	r24, r25
     f22:	80 83       	st	Z, r24
     f24:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
     f26:	fc 01       	movw	r30, r24
     f28:	e7 58       	subi	r30, 0x87	; 135
     f2a:	fe 4f       	sbci	r31, 0xFE	; 254
     f2c:	67 70       	andi	r22, 0x07	; 7
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	90 e0       	ldi	r25, 0x00	; 0
     f32:	02 c0       	rjmp	.+4      	; 0xf38 <nokia_lcd_set_pixel+0x48>
     f34:	88 0f       	add	r24, r24
     f36:	99 1f       	adc	r25, r25
     f38:	6a 95       	dec	r22
     f3a:	e2 f7       	brpl	.-8      	; 0xf34 <nokia_lcd_set_pixel+0x44>
     f3c:	80 95       	com	r24
     f3e:	90 81       	ld	r25, Z
     f40:	89 23       	and	r24, r25
     f42:	80 83       	st	Z, r24
     f44:	08 95       	ret

00000f46 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
     f46:	5f 92       	push	r5
     f48:	6f 92       	push	r6
     f4a:	7f 92       	push	r7
     f4c:	8f 92       	push	r8
     f4e:	9f 92       	push	r9
     f50:	af 92       	push	r10
     f52:	bf 92       	push	r11
     f54:	cf 92       	push	r12
     f56:	df 92       	push	r13
     f58:	ef 92       	push	r14
     f5a:	ff 92       	push	r15
     f5c:	0f 93       	push	r16
     f5e:	1f 93       	push	r17
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     f66:	26 2f       	mov	r18, r22
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	49 01       	movw	r8, r18
     f6c:	88 0c       	add	r8, r8
     f6e:	99 1c       	adc	r9, r9
     f70:	88 0c       	add	r8, r8
     f72:	99 1c       	adc	r9, r9
     f74:	82 0e       	add	r8, r18
     f76:	93 1e       	adc	r9, r19
     f78:	18 14       	cp	r1, r8
     f7a:	19 04       	cpc	r1, r9
     f7c:	0c f0       	brlt	.+2      	; 0xf80 <nokia_lcd_write_char+0x3a>
     f7e:	59 c0       	rjmp	.+178    	; 0x1032 <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
     f80:	89 01       	movw	r16, r18
     f82:	00 0f       	add	r16, r16
     f84:	11 1f       	adc	r17, r17
     f86:	00 0f       	add	r16, r16
     f88:	11 1f       	adc	r17, r17
     f8a:	00 0f       	add	r16, r16
     f8c:	11 1f       	adc	r17, r17
     f8e:	02 1b       	sub	r16, r18
     f90:	13 0b       	sbc	r17, r19
     f92:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     f94:	a8 2e       	mov	r10, r24
     f96:	b1 2c       	mov	r11, r1
     f98:	c5 01       	movw	r24, r10
     f9a:	80 97       	sbiw	r24, 0x20	; 32
     f9c:	5c 01       	movw	r10, r24
     f9e:	aa 0c       	add	r10, r10
     fa0:	bb 1c       	adc	r11, r11
     fa2:	aa 0c       	add	r10, r10
     fa4:	bb 1c       	adc	r11, r11
     fa6:	a8 0e       	add	r10, r24
     fa8:	b9 1e       	adc	r11, r25
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     faa:	0f 2e       	mov	r0, r31
     fac:	f2 e7       	ldi	r31, 0x72	; 114
     fae:	cf 2e       	mov	r12, r31
     fb0:	f3 e0       	ldi	r31, 0x03	; 3
     fb2:	df 2e       	mov	r13, r31
     fb4:	f0 2d       	mov	r31, r0
     fb6:	0f 2e       	mov	r0, r31
     fb8:	f1 e7       	ldi	r31, 0x71	; 113
     fba:	ef 2e       	mov	r14, r31
     fbc:	f3 e0       	ldi	r31, 0x03	; 3
     fbe:	ff 2e       	mov	r15, r31
     fc0:	f0 2d       	mov	r31, r0
     fc2:	2a c0       	rjmp	.+84     	; 0x1018 <nokia_lcd_write_char+0xd2>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     fc4:	fe 01       	movw	r30, r28
     fc6:	24 91       	lpm	r18, Z
     fc8:	30 e0       	ldi	r19, 0x00	; 0
     fca:	87 2d       	mov	r24, r7
     fcc:	65 2d       	mov	r22, r5
     fce:	93 d0       	rcall	.+294    	; 0x10f6 <__udivmodqi4>
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <nokia_lcd_write_char+0x90>
     fd2:	35 95       	asr	r19
     fd4:	27 95       	ror	r18
     fd6:	8a 95       	dec	r24
     fd8:	e2 f7       	brpl	.-8      	; 0xfd2 <nokia_lcd_write_char+0x8c>
     fda:	20 ff       	sbrs	r18, 0
     fdc:	09 c0       	rjmp	.+18     	; 0xff0 <nokia_lcd_write_char+0xaa>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     fde:	f6 01       	movw	r30, r12
     fe0:	60 81       	ld	r22, Z
     fe2:	67 0d       	add	r22, r7
     fe4:	f7 01       	movw	r30, r14
     fe6:	80 81       	ld	r24, Z
     fe8:	41 e0       	ldi	r20, 0x01	; 1
     fea:	86 0d       	add	r24, r6
     fec:	81 df       	rcall	.-254    	; 0xef0 <nokia_lcd_set_pixel>
     fee:	08 c0       	rjmp	.+16     	; 0x1000 <nokia_lcd_write_char+0xba>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     ff0:	f6 01       	movw	r30, r12
     ff2:	60 81       	ld	r22, Z
     ff4:	67 0d       	add	r22, r7
     ff6:	f7 01       	movw	r30, r14
     ff8:	80 81       	ld	r24, Z
     ffa:	40 e0       	ldi	r20, 0x00	; 0
     ffc:	86 0d       	add	r24, r6
     ffe:	78 df       	rcall	.-272    	; 0xef0 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
    1000:	73 94       	inc	r7
    1002:	87 2d       	mov	r24, r7
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	80 17       	cp	r24, r16
    1008:	91 07       	cpc	r25, r17
    100a:	e4 f2       	brlt	.-72     	; 0xfc4 <nokia_lcd_write_char+0x7e>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
    100c:	63 94       	inc	r6
    100e:	86 2d       	mov	r24, r6
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	88 15       	cp	r24, r8
    1014:	99 05       	cpc	r25, r9
    1016:	6c f4       	brge	.+26     	; 0x1032 <nokia_lcd_write_char+0xec>
		for (y = 0; y < 7*scale; y++)
    1018:	10 16       	cp	r1, r16
    101a:	11 06       	cpc	r1, r17
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
    101c:	bc f7       	brge	.-18     	; 0x100c <nokia_lcd_write_char+0xc6>
    101e:	86 2d       	mov	r24, r6
    1020:	65 2d       	mov	r22, r5
    1022:	69 d0       	rcall	.+210    	; 0x10f6 <__udivmodqi4>
    1024:	e5 01       	movw	r28, r10
    1026:	c8 0f       	add	r28, r24
    1028:	d1 1d       	adc	r29, r1
    102a:	c2 56       	subi	r28, 0x62	; 98
    102c:	df 4f       	sbci	r29, 0xFF	; 255
    102e:	71 2c       	mov	r7, r1
    1030:	c9 cf       	rjmp	.-110    	; 0xfc4 <nokia_lcd_write_char+0x7e>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1032:	80 91 71 03 	lds	r24, 0x0371	; 0x800371 <nokia_lcd+0x1f8>
    1036:	91 e0       	ldi	r25, 0x01	; 1
    1038:	98 0f       	add	r25, r24
    103a:	85 2d       	mov	r24, r5
    103c:	88 0f       	add	r24, r24
    103e:	88 0f       	add	r24, r24
    1040:	85 0d       	add	r24, r5
    1042:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
    1044:	84 35       	cpi	r24, 0x54	; 84
    1046:	18 f4       	brcc	.+6      	; 0x104e <nokia_lcd_write_char+0x108>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
    1048:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <nokia_lcd+0x1f8>
    104c:	0e c0       	rjmp	.+28     	; 0x106a <nokia_lcd_write_char+0x124>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
    104e:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y += 7*scale + 1;
    1052:	e2 e7       	ldi	r30, 0x72	; 114
    1054:	f3 e0       	ldi	r31, 0x03	; 3
    1056:	80 81       	ld	r24, Z
    1058:	91 e0       	ldi	r25, 0x01	; 1
    105a:	98 0f       	add	r25, r24
    105c:	85 2d       	mov	r24, r5
    105e:	88 0f       	add	r24, r24
    1060:	88 0f       	add	r24, r24
    1062:	88 0f       	add	r24, r24
    1064:	85 19       	sub	r24, r5
    1066:	89 0f       	add	r24, r25
    1068:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
    106a:	80 91 72 03 	lds	r24, 0x0372	; 0x800372 <nokia_lcd+0x1f9>
    106e:	80 33       	cpi	r24, 0x30	; 48
    1070:	20 f0       	brcs	.+8      	; 0x107a <nokia_lcd_write_char+0x134>
		nokia_lcd.cursor_x = 0;
    1072:	10 92 71 03 	sts	0x0371, r1	; 0x800371 <nokia_lcd+0x1f8>
		nokia_lcd.cursor_y = 0;
    1076:	10 92 72 03 	sts	0x0372, r1	; 0x800372 <nokia_lcd+0x1f9>
	}
}
    107a:	df 91       	pop	r29
    107c:	cf 91       	pop	r28
    107e:	1f 91       	pop	r17
    1080:	0f 91       	pop	r16
    1082:	ff 90       	pop	r15
    1084:	ef 90       	pop	r14
    1086:	df 90       	pop	r13
    1088:	cf 90       	pop	r12
    108a:	bf 90       	pop	r11
    108c:	af 90       	pop	r10
    108e:	9f 90       	pop	r9
    1090:	8f 90       	pop	r8
    1092:	7f 90       	pop	r7
    1094:	6f 90       	pop	r6
    1096:	5f 90       	pop	r5
    1098:	08 95       	ret

0000109a <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
    109a:	1f 93       	push	r17
    109c:	cf 93       	push	r28
    109e:	df 93       	push	r29
    10a0:	ec 01       	movw	r28, r24
	while(*str)
    10a2:	88 81       	ld	r24, Y
    10a4:	88 23       	and	r24, r24
    10a6:	39 f0       	breq	.+14     	; 0x10b6 <nokia_lcd_write_string+0x1c>
    10a8:	16 2f       	mov	r17, r22
    10aa:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
    10ac:	61 2f       	mov	r22, r17
    10ae:	4b df       	rcall	.-362    	; 0xf46 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
    10b0:	89 91       	ld	r24, Y+
    10b2:	81 11       	cpse	r24, r1
    10b4:	fb cf       	rjmp	.-10     	; 0x10ac <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
    10b6:	df 91       	pop	r29
    10b8:	cf 91       	pop	r28
    10ba:	1f 91       	pop	r17
    10bc:	08 95       	ret

000010be <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
    10be:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <nokia_lcd+0x1f8>
	nokia_lcd.cursor_y = y;
    10c2:	60 93 72 03 	sts	0x0372, r22	; 0x800372 <nokia_lcd+0x1f9>
    10c6:	08 95       	ret

000010c8 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
    10c8:	0f 93       	push	r16
    10ca:	1f 93       	push	r17
    10cc:	cf 93       	push	r28
    10ce:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
    10d0:	80 e8       	ldi	r24, 0x80	; 128
    10d2:	c4 de       	rcall	.-632    	; 0xe5c <write_cmd>
	write_cmd(0x40);
    10d4:	80 e4       	ldi	r24, 0x40	; 64
    10d6:	c2 de       	rcall	.-636    	; 0xe5c <write_cmd>
    10d8:	c9 e7       	ldi	r28, 0x79	; 121
    10da:	d1 e0       	ldi	r29, 0x01	; 1
    10dc:	01 e7       	ldi	r16, 0x71	; 113
    10de:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
    10e0:	61 e0       	ldi	r22, 0x01	; 1
    10e2:	89 91       	ld	r24, Y+
    10e4:	9d de       	rcall	.-710    	; 0xe20 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
    10e6:	c0 17       	cp	r28, r16
    10e8:	d1 07       	cpc	r29, r17
    10ea:	d1 f7       	brne	.-12     	; 0x10e0 <nokia_lcd_render+0x18>
		write_data(nokia_lcd.screen[i]);
}
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	1f 91       	pop	r17
    10f2:	0f 91       	pop	r16
    10f4:	08 95       	ret

000010f6 <__udivmodqi4>:
    10f6:	99 1b       	sub	r25, r25
    10f8:	79 e0       	ldi	r23, 0x09	; 9
    10fa:	04 c0       	rjmp	.+8      	; 0x1104 <__udivmodqi4_ep>

000010fc <__udivmodqi4_loop>:
    10fc:	99 1f       	adc	r25, r25
    10fe:	96 17       	cp	r25, r22
    1100:	08 f0       	brcs	.+2      	; 0x1104 <__udivmodqi4_ep>
    1102:	96 1b       	sub	r25, r22

00001104 <__udivmodqi4_ep>:
    1104:	88 1f       	adc	r24, r24
    1106:	7a 95       	dec	r23
    1108:	c9 f7       	brne	.-14     	; 0x10fc <__udivmodqi4_loop>
    110a:	80 95       	com	r24
    110c:	08 95       	ret

0000110e <__udivmodsi4>:
    110e:	a1 e2       	ldi	r26, 0x21	; 33
    1110:	1a 2e       	mov	r1, r26
    1112:	aa 1b       	sub	r26, r26
    1114:	bb 1b       	sub	r27, r27
    1116:	fd 01       	movw	r30, r26
    1118:	0d c0       	rjmp	.+26     	; 0x1134 <__udivmodsi4_ep>

0000111a <__udivmodsi4_loop>:
    111a:	aa 1f       	adc	r26, r26
    111c:	bb 1f       	adc	r27, r27
    111e:	ee 1f       	adc	r30, r30
    1120:	ff 1f       	adc	r31, r31
    1122:	a2 17       	cp	r26, r18
    1124:	b3 07       	cpc	r27, r19
    1126:	e4 07       	cpc	r30, r20
    1128:	f5 07       	cpc	r31, r21
    112a:	20 f0       	brcs	.+8      	; 0x1134 <__udivmodsi4_ep>
    112c:	a2 1b       	sub	r26, r18
    112e:	b3 0b       	sbc	r27, r19
    1130:	e4 0b       	sbc	r30, r20
    1132:	f5 0b       	sbc	r31, r21

00001134 <__udivmodsi4_ep>:
    1134:	66 1f       	adc	r22, r22
    1136:	77 1f       	adc	r23, r23
    1138:	88 1f       	adc	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	1a 94       	dec	r1
    113e:	69 f7       	brne	.-38     	; 0x111a <__udivmodsi4_loop>
    1140:	60 95       	com	r22
    1142:	70 95       	com	r23
    1144:	80 95       	com	r24
    1146:	90 95       	com	r25
    1148:	9b 01       	movw	r18, r22
    114a:	ac 01       	movw	r20, r24
    114c:	bd 01       	movw	r22, r26
    114e:	cf 01       	movw	r24, r30
    1150:	08 95       	ret

00001152 <__tablejump2__>:
    1152:	ee 0f       	add	r30, r30
    1154:	ff 1f       	adc	r31, r31
    1156:	00 24       	eor	r0, r0
    1158:	00 1c       	adc	r0, r0
    115a:	0b be       	out	0x3b, r0	; 59
    115c:	07 90       	elpm	r0, Z+
    115e:	f6 91       	elpm	r31, Z
    1160:	e0 2d       	mov	r30, r0
    1162:	09 94       	ijmp

00001164 <_exit>:
    1164:	f8 94       	cli

00001166 <__stop_program>:
    1166:	ff cf       	rjmp	.-2      	; 0x1166 <__stop_program>
